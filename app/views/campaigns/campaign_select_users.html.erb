<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.min.js"></script>
<div class="campaign-container">
  <div class="campaign-controls">
    <% params[:campaign].present? ? selected_template = params[:campaign][:selected_template] : selected_template = '' %>
    <% params[:campaign].present? ? selected_users = params[:campaign][:selected_users] : selected_users = '' %>
    <% params[:campaign].present? ? selected_owner = params[:campaign][:selected_owner] : selected_owner = current_user.id %>
    <% params[:campaign].present? && params[:campaign][:selected_users].present? ? disabled = '' : disabled = 'disabled' %>
    <%= simple_form_for :campaign, url: campaign_select_template_path, method: :get do |f| %>
      <%= f.hidden_field :selected_template, value: selected_template %>
      <%= f.hidden_field :selected_users, value: selected_users %>
      <%= f.hidden_field :selected_owner, value: selected_owner %>
      <%= button_tag type: 'submit' do %>
        <div class="select-step-number-disabled">1</div><p>Select a Template</p>
      <% end %>
    <% end %>
    <%= image_tag('arrow-next.svg', height: '20', :class => "arrow-next") %>
    <button class='active'><div class="select-step-number">2</div><p>Select Employees</p></button>
    <%= image_tag('arrow-next.svg', height: '20', :class => "arrow-next") %>
    <%= simple_form_for :campaign, url: campaign_select_dates_path, method: :get do |f| %>
      <%= f.hidden_field :selected_template, value: selected_template %>
      <%= f.hidden_field :selected_users, value: selected_users %>
      <%= f.hidden_field :selected_owner, value: selected_owner %>
      <%= button_tag type: 'submit', class: "campaign__next-button " + disabled, disabled: disabled.present?, data: { toggle: 'tooltip' }, title: 'Please select a template' do %>
        <div class="select-step-number-disabled">3</div><p>Select Dates</p>
      <% end %>
    <% end %>
  </div>
  <div class="campaign-searchbar-right">
  <div id="main-controls">
    <%= render 'shared/searchbar_campaigns', path: campaign_select_users_path, reset_path: campaign_select_users_path(reset: "") %>
      <div class="assign-next">
        <label class="assign-label-disabled" for="owner-select">Manager :</label>
      <select name="owner" id="owner-select-disabled" disabled>
        <% User.where(company_id: current_user.company_id, access_level: ['HR', 'Manager']).order(lastname: :asc).each do |user| %>
          <% if user.id == selected_owner.to_i %>
            <option value="user.id" selected><%= user.fullname %></option>
          <% else %>
            <option value="user.id"><%= user.fullname %></option>
          <% end %>
        <% end %>
      </select>
      <button class='campaign__next-button-arrow <%= disabled %>' onclick='nextPage();'>
      <%= image_tag('Arrow-right.svg', :class => "arrow-right") %>
    </button>
    <div class="next-step-info">Next : Select <br/> Dates</div>
  </div>
</div>
</div>
  <div id="paginate-container" class='hidden'>
    <%= paginate @users, remote: true, param_name: :page %>
  </div>
  <div class="book-users-lists__container">
    <div class='book-users-lists'>
      <div class="book-users-headers">
        <div class="book-users-card">
          <input type="checkbox" class='hidden'>
          <div class="book-users-pseudo-checkbox-container"><button class="book-users-pseudo-checkbox__select-all" disabled></button></div>
          <div class="book-users-card-infos">
            <div>
              <p>Fullname</p>
            </div>
            <div>
              <p>Email</p>
            </div>
            <% TagCategory.where(company_id: current_user.company_id).each do |tag_category| %>
              <div>
                <p><%= tag_category.name %></p>
              </div>
            <% end %>
          </div>
        </div>
      </div>
      <div class="book-users-list book-users-all">
        <%= render 'pages/partials/book_user_index', users: @users, selected_users: @selected_users, selected: 'false', filtered: 'all' %>
      </div>
      <div class="book-users-list book-users-filtered hidden">
        <%= render 'pages/partials/book_user_index', users: @searched_users, selected_users: @selected_users, selected: 'false', filtered: 'filtered' %>
      </div>
    </div>
    <div class="book-users-selected">
      <div class="book-users-headers-selected">
        <p>SELECTED EMPLOYEES</p>
      </div>
      <button class="back-arrow-btn-mobile" onclick="document.querySelectorAll('.simple_form.campaign')[0].querySelector('button').click()"><i class="fas fa-arrow-left"></i></button>
      <button class="next-arrow-btn-mobile <%= disabled %>" onclick="document.querySelectorAll('.simple_form.campaign')[1].querySelector('button').click()"><i class="fas fa-arrow-right"></i></button>
      <%= render  'pages/partials/book_user_index', users: User.where(id: @selected_users.split(',')).order(lastname: :asc), selected: 'true', filtered: 'selected' %>
      <div class="book-users-card book-users-card-template hidden">
        <div class="book-users-pseudo-checkbox-container"><button class="book-users-pseudo-checkbox"></button></div>
        <input type="checkbox" class="book-users-checkbox hidden" checked=''>
        <div class="book-users-card-infos">
        </div>
      </div>
    </div>
  </div>
</div>


<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  $(document).ready(function () {
    $(".book-users-list").floatingScroll();
  });
</script>

<script>

  function selectUser(element) {
    user_card = element
    user_card_infos = user_card.querySelector('.book-users-card-infos')
    selected_container = document.querySelector('.book-users-selected')
    selected_array = []
    checkbox = user_card.querySelector('input[type="checkbox"]')
    next_button = document.querySelector('.campaign__next-button')
    next_button_arrow = document.querySelector('.campaign__next-button-arrow')
    next_arrow_btn_mobile = document.querySelector('.next-arrow-btn-mobile')
    checkbox.checked = !checkbox.checked
    document.querySelectorAll('#' + user_card.id).forEach((card) => {
      if(checkbox.checked == true) {
        card.classList.add('selected')
      } else {
        card.classList.remove('selected')
      }
      card.querySelector('input[type="checkbox"]').checked = checkbox.checked
    })
    if (checkbox.checked == true) {
      new_card = document.createElement('div')
      new_card.classList.add('book-users-card', 'selected')
      new_card.id = user_card.id
      template = document.querySelector('.book-users-card-template')
      new_card.innerHTML = template.innerHTML
      new_card.onclick = function(e) {selectUser(this)}
      new_card_infos = new_card.querySelector('.book-users-card-infos')
      new_info_name = document.createElement('div')
      new_info_name.innerHTML = user_card_infos.querySelectorAll('div')[0].innerHTML
      new_info_email = document.createElement('div')
      new_info_email.innerHTML = user_card_infos.querySelectorAll('div')[1].innerHTML
      new_card_checkbox = new_card.querySelector('input[type="checkbox"]')
      new_card_checkbox.checked = true
      new_card_checkbox.id = 'user' + new_card.id.split('-')[2]
      new_card_infos.appendChild(new_info_name)
      new_card_infos.appendChild(new_info_email)
      next_arrow_btn_mobile.classList.remove('disabled')
      document.querySelector('.book-users-selected').appendChild(new_card)
    } else {
      selected_container.querySelector('#' + user_card.id).remove();
      next_button.classList.remove('hilight-next-step')
      next_arrow_btn_mobile.classList.add('disabled')
    }
    selected_container.querySelectorAll('.selected:not(.book-users-card-template)').forEach((card) => {
      selected_array.push(card.id.split('-')[1])
    })
    document.querySelectorAll('#campaign_selected_users').forEach((storage) => {
      storage.value = selected_array
    })
    document.getElementById('search_campaign_selected_users').value = selected_array
    if (selected_array.length == 0) {
      next_button.disabled = true
      next_button.classList.add('disabled')
      next_button_arrow.classList.add('disabled')
      next_button.classList.remove('hilight-next-step')
    } else {
      next_button.disabled = false
      next_button.classList.remove('disabled')
      next_button_arrow.classList.remove('disabled')
      next_button.classList.add('hilight-next-step')
    }
    document.querySelector('.book-users-headers-selected').innerHTML = '<p>' + selected_array.length + ' SELECTED EMPLOYEES</p>'
  }

  function selectAllUsers(element) {
    list = document.querySelector('.book-users-list:not(.hidden)')
    list.querySelectorAll('.book-users-card').forEach((button) => {
      selectUser(button)
    })
    checkbox = element.closest('.book-users-card').querySelector('input')
    checkbox.checked = !checkbox.checked
    if (checkbox.checked) {
      element.style.backgroundColor = '#3177B7'
    } else {
      element.style.backgroundColor = 'transparent'
    }
  }

  function checkSelectedAll() {
    list = document.querySelector('.book-users-list:not(.hidden)')
    selected_list = document.querySelector('.book-users-selected')
    user_array_list = []
    user_selected_list = []
    list.querySelectorAll('.book-users-card').forEach((user_card) => {
      user_array_list.push(user_card.id)
    })
    selected_list.querySelectorAll('.book-users-card').forEach((user_card) => {
      user_selected_list.push(user_card.id)
    })
    user_selected_list = user_selected_list.slice().sort().filter(function (el) {
        return el != "";
    });
    target_button = document.querySelector('.book-users-headers').querySelector('.book-users-pseudo-checkbox__select-all')
    if (JSON.stringify(user_array_list) === JSON.stringify(user_selected_list)) {
      target_button.style.backgroundColor = '#3177B7'
    } else {
      target_button.style.backgroundColor = 'transparent'
    }
    document.querySelector('.book-users-headers-selected').innerHTML = '<p>' + user_selected_list.length + ' SELECTED EMPLOYEES</p>'
  }

  function showResetMobile(boolean) {
    search_button = document.querySelector('.btn-search--mobile')
    reset_button = document.querySelector('.btn-reset--mobile')
    if (boolean) {
      search_button.classList.add('hidden')
      reset_button.classList.remove('hidden')
    } else {
      search_button.classList.remove('hidden')
      reset_button.classList.add('hidden')
    }
  }

  function resetAllFilter(element, recommendation = false) {
    searchbar = element.closest('.searchbar')
    searchbar.querySelectorAll('input').forEach((input) => {
      if (input.type == 'text') {
        input.value = ''
      } else if (input.type == 'checkbox') {
        input.checked = false
      }
    })
    searchbar.querySelectorAll('select').forEach((select) => {
      select.selectedIndex = 0
    })
    searchbar.querySelector('.btn-search').click()
  }

  function nextPage() {
    selected_template = document.querySelector('#campaign_selected_template').value
    submit = document.querySelector('.campaign__next-button')
    if (selected_template != '') {
      submit.click()
    }
  }

  function infiniteScroll() {
    if ($("nav ul.pagination a[rel=next]").length) {
      $(".book-users-all").infiniteScroll({
        path: "nav ul.pagination a[rel=next]",
        append: ".user-index-card",
        hideNav: "nav ul.pagination",
        history: false,
        scrollThreshold: 3000,
        debug: false,
        loadOnScroll: true,
      });
    };
  }

  infiniteScroll()
  checkSelectedAll()

  function countElements(array, element) {
    const counts = {}
    for (const el of array) {
      counts[el] = counts[el] ? counts[el] + 1 : 1;
    }
    return counts[element]
  }

  document.querySelectorAll('input[type="checkbox"]').forEach((checkbox) => {
    if (checkbox.checked == true) {
      checkbox.closest('.book-users-card').classList.add('selected')
    }
  })

  window.addEventListener('scroll', function(e) {
    document.querySelector('.book-users-all').querySelectorAll('.book-users-card').forEach((card) => {
      if (document.querySelector('.book-users-selected').querySelector('#' + card.id) != undefined) {
        card.classList.add('selected')
        card.querySelector(('input[type="checkbox"]')).checked = true
      }
    })
  })

</script>
