<% icon = { 'open_question' => 'bi:question-circle-fill',
            'mcq' => 'ant-design:check-square-filled',
            'objective' => 'fluent:target-arrow-24-filled',
            'rating' => 'codicon:star-full' } %>

<div class="interview-container">

  <div class="flex-row-start-centered p-2rem bkt-bg-white bkt-box-shadow-light pos-fix z-index-150" style='top: 7.5rem; left: 0; right: 0; height: 9rem;'>
    <%= render_component BackComponent.new(fallback: interview_forms_path) %>
  </div>

  <div class="interview-main flex-row-between-start bkt-bg-white pos-rel bkt-box-shadow-compact-top">

    <div class='interview-main__left bkt-bg-white py-3rem px-5rem border-right-bkt-light-grey pos-fix z-index-100' style='top: 16.5rem; left: 0;'>
      <%= render 'interview_forms/edit/edit_show_summary', template: @template %>
    </div>

    <div class="interview-main__right">

      <h1 class="fs-3rem mb-2rem"><%= @template.title %></h1>

      <div class="trix-display">
        <%= sanitize @template.description %>
      </div>

      <% if @template.video.present? %>
        <iframe class='mb-5rem' src="<%= VideoHelper.embed_video(@template.video) %>" style='width: 75%; aspect-ratio: 16 / 9;'></iframe>
      <% end %>

      <% question_hash = {} %>
      <% j = 0 %>

      <% @template.interview_questions.order(position: :asc).each do |question| %>
        <% if question.separator? %>
          <% j += 1 %>
        <% end %>
        <% question_hash[j] = question_hash[j].present? ? question_hash[j] + [question] : [question] %>
      <% end %>

      <% question_number = 0 %>

      <% question_hash.each do |key, value| %>
        <% values = question_hash.count == 1 && key == 0 ? value[0..-1] : value[1..-1] %>

        <% if key.to_i > 0 %>
          <div class="interview-main__right-separator">
            <% separator = value.first %>
            <p><%= key %>. <%= separator.question %></p>
          </div>
          <div class="trix-display">
            <%= sanitize separator.description %>
          </div>
        <% end %>
        <div class="interview-main__right-questions">
          <% values.each do |question| %>

            <% question_number += 1 %>

            <div class="interview-main__right-question">
              <a id="anchor-<%= question.id %>" style='position:absolute; top: -20rem;'></a>
              <div title='<%= "Required" if question.required? %>' class='interview-main__right-question-title'>
                <p><%= question_number %>. </p>
                <span class="iconify" data-icon="<%= icon[question.question_type] %>"></span>
                <p><%= question.question %> <%= "*" if question.required? %> <em>- visible by <%= question.visible_for %></em></p>
              </div>
              <div class="interview-main__right-question-description">
                <%= sanitize question.description %>
              </div>
              <%= render 'interview_forms/show/show_interview_form_question_form', questions: @template.interview_questions, question: question, j: question_number, read_only: true %>
            </div>
          <% end %>
        </div>
      <% end %>

    </div>

  </div>

</div>

<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  doubleClickGuardian = false

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0;i < len;i++)  {
        if (event.target == notelem[i] || notelem[i].contains(event.target)) {
            clickedOut = false;
        }
    }
    if (clickedOut) return true;
    else return false;
  }


  ////////////////////
  // BOOKLET SELECT //
  ////////////////////

  function BookletSelectExpand(element) {
    doubleClickGuardian = true
    dropdown = element.closest('.booklet-select__container').querySelector('.booklet-select__dropdown')
    setTimeout(() => {
      doubleClickGuardian = false
    }, 100);
    if (dropdown.classList.contains('hidden')) {
      dropdown.classList.remove('hidden')
      window.addEventListener('click', function(e) {
        if (outsideClick(e, element) && !doubleClickGuardian) {
          dropdown.classList.add('hidden')
          this.removeEventListener('click', arguments.callee, false);
        }
      });
    } else {
      dropdown.classList.add('hidden')
    }
  }

  function BookletSelectSubmit(element) {
    form = element.closest('form')
    selected_display = element.closest('.booklet-select__container').querySelector('.booklet-select__selected')
    selected_value = element.querySelector('p').innerText
    submit_button = form.querySelector('.hidden-submit')

    selected_display.querySelector('p').innerText = selected_value
  }

</script>
