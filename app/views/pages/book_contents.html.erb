<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.min.js"></script>
<div class="book-container">
  <div class="book-controls">
    <button class='active'><p>Select a Program</p></button>
    <%= simple_form_for :book, url: book_users_path, method: :get do |f| %>
      <% params[:book].present? ? selected_folder = params[:book][:selected_folder] : selected_folder = '' %>
      <% params[:book].present? ? selected_content = params[:book][:selected_content] : selected_content = '' %>
      <% params[:book].present? ? selected_users = params[:book][:selected_users] : selected_users = '' %>
      <%= f.hidden_field :selected_folder, value: selected_folder %>
      <%= f.hidden_field :selected_content, value: selected_content %>
      <%= f.hidden_field :selected_users, value: selected_users %>
      <%= button_tag type: 'submit' do %>
          <p>Select Participants</p>
      <% end %>
    <% end %>
    <%= simple_form_for :book, url: book_dates_path, method: :get do |f| %>
      <% params[:book].present? ? selected_folder = params[:book][:selected_folder] : selected_folder = '' %>
      <% params[:book].present? ? selected_content = params[:book][:selected_content] : selected_content = '' %>
      <% params[:book].present? ? selected_users = params[:book][:selected_users] : selected_users = '' %>
      <%= f.hidden_field :selected_folder, value: selected_folder %>
      <%= f.hidden_field :selected_content, value: selected_content %>
      <%= f.hidden_field :selected_users, value: selected_users %>
      <%= button_tag type: 'submit' do %>
        <p>Select Dates</p>
      <% end %>
    <% end %>
  </div>
  <div class="index-controls-filter-bar-book">
    <%= render 'shared/searchbar', path: book_contents_path, reset_path: book_contents_path(reset: ""), reset: true %>
  </div>
  <div class="workshop-cards-book">
    <%= render 'pages/partials/book_content_index', contents: @contents, selected_content: @selected_content, folders: @folders, selected_folder: @selected_folder %>
  </div>
</div>

<script>

  function searchInput(element) {
    if (element.value != '') {
      element.closest('.searchbar').querySelector('.btn-reset-form').classList.remove('hidden')
    } else {
      element.closest('.searchbar').querySelector('.btn-reset-form').classList.add('hidden')
    }
  }

  function resetInput(element) {
    element.closest('.searchbar').querySelector('input').value = ''
    element.closest('.searchbar').querySelector('.btn-search').click()
    element.closest('.searchbar').querySelector('.btn-reset-form').classList.add('hidden')
  }

  function selectContent(element) {
      checkboxes = document.querySelectorAll('.book-contents-checkbox')
      input = element.parentNode.querySelector('input')
      selected_type = input.id.split('-')[1]
      selected_id = input.id.split('-')[2]
      document.getElementById('book_selected_folder').value = ''
      document.getElementById('book_selected_content').value = ''
      selected_storage = document.getElementById('book_selected_' + selected_type)
      input.checked = !input.checked
      if (input.checked == true) {
        checkboxes.forEach((checkbox) => {
          card_container = checkbox.closest('.catalogue-card-container')
          if (checkbox != input) {
            checkbox.checked = false
            card_container.classList.add('disabled')
            card_container.classList.remove('selected')
            card_container.querySelector('button').innerText = 'SELECT'
          } else {
            card_container.classList.add('selected')
            card_container.classList.remove('disabled')
            card_container.querySelector('button').innerText = 'SELECTED'
          }
          selected_storage.value = selected_id
        })
      } else {
        checkboxes.forEach((checkbox) => {
          card_container = checkbox.closest('.catalogue-card-container')
          card_container.classList.remove('disabled','selected')
          card_container.querySelector('button').innerText = 'SELECT'
        })
        selected_storage.value = ''
      }
  }

  checkboxes = document.querySelectorAll('.book-contents-checkbox')
  if (document.querySelectorAll('input:checked').length != 0) {
    checkboxes.forEach((checkbox) => {
      card_container = checkbox.closest('.catalogue-card-container')
      if (checkbox.checked != true) {
        card_container.classList.add('disabled')
      } else {
        card_container.classList.add('selected')
        card_container.querySelector('button').innerText = 'SELECTED'
      }
    })
  }

  sliders = document.querySelectorAll('.catalogue-row');
  sliders.forEach((slider) => {
    isDown = false;
    let startX;
    let scrollLeft;

    slider.addEventListener('mousedown', (e) => {
      isDown = true;
      slider.classList.add('active');
      startX = e.pageX - slider.offsetLeft;
      scrollLeft = slider.scrollLeft;
    });
    slider.addEventListener('mouseleave', () => {
      isDown = false;
      slider.classList.remove('active');
    });
    slider.addEventListener('mouseup', () => {
      isDown = false;
      slider.classList.remove('active');
    });
    slider.addEventListener('mousemove', (e) => {
      if(!isDown) return;
      e.preventDefault();
      const x = e.pageX - slider.offsetLeft;
      const walk = (x - startX) * 3; //scroll-fast
      slider.scrollLeft = scrollLeft - walk;
    });
  })
</script>
