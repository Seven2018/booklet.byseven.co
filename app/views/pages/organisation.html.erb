<div id="index-controls" class='flex-row-between-centered'>
  <h1>Employees</h1>
</div>

<div class='organization-page'>
  <div class='filter-dropdown-form'>
    <div class="hidden-form" id='filter-block'>
      <div class="fil">
        <div class="flex-row-between-centered">
          <h3 class="category-title"><b>Filter</b></h3>
          <div id='tag-category-new'>
            <div id='tag-category-new-button' class='icon-btn' onclick='openForm(this);'>
              <i class="fas fa-plus"></i>
            </div>
            <div id='tag-category-new-form' class='hidden hidden-form-ajax'>
              <%= simple_form_for :tag_category, url: tag_categories_path(ajax: true), method: :post, remote: true, input_html: {multipart: true} do |f| %>
                <div class='flex-row-between-centered'>
                  <%= f.text_field :name, placeholder: 'New Category', style: 'height: 100%;' %>
                  <%= button_tag :submit, class: 'hidden-submit' do %>
                    <i class="fas fa-save"></i>
                  <% end %>
                </div>
              <% end %>
            </div>
          </div>
        </div>
        <i class="fas fa-times" id='close-btn'></i>
      </div>
      <% i = 1 %>
      <%= simple_form_for :filter, url: organisation_path, input_html: { class: "filter-form" }, method: :get do |f| %>
        <% tag_checked = params[:filter][:tag] if params[:filter].present? %>
        <% TagCategory.where(company_id: current_user.company_id).order(name: :asc).each do |category| %>
          <div class="filter-form-input">
            <div class="category-name flex-row-start-centered">
              <legend><%= category.name.capitalize %></legend>
              <div class='tag-new'>
                <div data-target="#category-<%= category.id %>" class='tag-new-button icon-btn' onclick='fetchCategoryForm(this);'>
                  <i class="fas fa-plus"></i>
                </div>
              </div>
            </div>
            <%= f.input :tag, label: false, collection: Tag.where(tag_category_id: category.id).map(&:tag_name), as: :check_boxes, input_html: { class: "tag-selector" }, required: false, checked: tag_checked, legend_tag: false %>
          </div>
        <% end %>
        <div class=filter-text>
          <%= f.submit 'Filter', class: 'final-filter-btn' %>
      <% end %>
      <%= link_to 'Clear All', organisation_path, class: 'final-filter-clear' %>
      </div>
      <% TagCategory.where(company_id: current_user.company_id).order(name: :asc).each do |category| %>
        <div class='hidden-form-category-ajax hidden' id="category-<%= category.id %>">
          <%= simple_form_for :tag, url: tags_path(ajax: true), method: :post, remote: true, input_html: {multipart: true} do |f| %>
            <div class='flex-row-between-centered'>
              <%= f.text_field :tag_name, placeholder: 'New Tag', style: 'height: 100%;' %>
              <%= f.hidden_field :tag_category_id, value: category.id %>
              <%= button_tag :submit, class: 'hidden-submit' do %>
                <i class="fas fa-save"></i>
              <% end %>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
  <div class='organisation-users'>
    <div class='staff-members'>
      <h3 class="category-title"><b>Staff Members</b></h3>
      <div class='mobile-btns'>
        <div class="mobile-filter-btn">
          <i class="fas fa-sliders-h fa-2x"></i>
        </div>
        <% if ['Super Admin', 'Admin', 'HR'].include?(current_user.access_level) %>
        <button class="btn btn-edit-white btn-edit-icon dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-plus"></i></button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
          <!-- <a data-toggle='modal' data-target='#newTagCategory' class='dropdown-item'>New Tag Category</a>
          <a data-toggle='modal' data-target='#newTag' class='dropdown-item'>New Tag</a> -->
          <a data-toggle='modal' data-target='#newUser' class='dropdown-item'>New User</a>
          <a data-toggle='modal' data-target='#importUsers' class='dropdown-item'>Import Users</a>
        </div>
      <% end %>
      </div>
    </div>
    <% @users.each do |user| %>
      <%= link_to user_path(user) do %>
        <div class='user-index-card'>
          <img src="<%= user.picture %>" alt="" class='avatar-sm' onerror='this.onerror=null;this.src="<%= asset_url('empty-avatar.png', type: :image) %>";'>
          <div class="user-index-infos flex-row-between-centered">
            <div class="user-index-info">
              <p data-toggle="tooltip" title="<%= user.fullname %>"><%= user.fullname %></p>
            </div>
            <div class="user-index-info">
              <p data-toggle="tooltip" title="<%= user.email %>"><%= user.email %></p>
            </div>
            <div class="user-index-info">
              <% tags = '' %>
              <% user.tags.each do |tag| %>
                <% if tag == user.tags.last %>
                  <% tags += "#{tag.tag_name}" %>
                <% else %>
                  <% tags += "#{tag.tag_name}, " %>
                <% end %>
              <% end %>
              <p data-toggle="tooltip" title="<%= tags %>"><%= tags %></p>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>



<!-- </div>
 -->
<!-- Modals -->
<div class='modal fade' id='newTagCategory' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'tag_categories/new', tag_category: TagCategory.new %>
  </div>
</div>

<div class='modal fade' id='newTag' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'tags/new', tag: Tag.new %>
  </div>
</div>

<div class='modal fade' id='newUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/new', tag: User.new %>
  </div>
</div>

<div class='modal fade' id='importUsers' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/import', tag: User.new %>
  </div>
</div>

<script>
  /* When the user clicks on the button,
  toggle between hiding and showing the dropdown content */
  function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
  }

  function openForm(element) {
    element.classList.toggle('hidden');
    element.parentNode.querySelector('.hidden-form-ajax').classList.toggle('hidden');
  }

  function fetchCategoryForm(element) {
    form = document.querySelector(element.getAttribute('data-target'));
    console.log(element.offsetTop);
    console.log(element.offsetLeft);
    form.style.top = (element.offsetTop - 7).toString() + 'px';
    form.style.left = element.offsetLeft.toString() + 'px';
    form.classList.toggle('hidden');
  }

  // Close the dropdown if the user clicks outside of it
  window.onclick = function(event) {
    if (!event.target.matches('.filter-dropbtn')) {
      var dropdowns = document.getElementsByClassName("filter-dropdown-content");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown.classList.contains('show')) {
          openDropdown.classList.remove('show');
        }
      }
    }
  }

  $('.filter-dropbtn').click(function(){
    $(this).parent().toggleClass('open');
  });

  filter_btn = document.querySelector('.mobile-filter-btn')
  close_btn = document.querySelector('#close-btn')
  bookletcontainer = document.getElementById('booklet-container')
  filter_slider = document.querySelector('.filter-dropdown-form')
  filter_btn.addEventListener('click', (event) => {
    console.log('mesballs');
    filter_slider.style.width = "375px";
    filter_slider.style.zindex = "100";
  })

  close_btn.addEventListener('click', (event) => {
    filter_slider.style.width = "0px";
    filter_slider.style.zindex = "100";
    filter_slider.style.padding = "0px";
  })
</script>
