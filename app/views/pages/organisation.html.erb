<div id="index-controls" class='flex-row-between-centered'>
  <h1>Organisation</h1>
  <% if ['Super Admin', 'Admin', 'HR'].include?(current_user.access_level) %>
      <button class="btn btn-edit-white btn-edit-icon dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-plus"></i></button>
      <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
        <a data-toggle='modal' data-target='#newTag' class='dropdown-item'>New Tag</a>
        <a data-toggle='modal' data-target='#newUser' class='dropdown-item'>New User</a>
        <a data-toggle='modal' data-target='#importUsers' class='dropdown-item'>Import Users</a>
      </div>
    <% end %>
</div>

<div class='organization-buttons'>
  <div class="filter-dropdown">
    <div onclick="myFunction()" class="filter-dropbtn">Filter By<i class="fas fa-sliders-h"></i></div>
      <div id="myDropdown" class="filter-dropdown-content">
        <div class='filter-dropdown-form'>
          <% i = 1 %>
          <%= simple_form_for :filter, url: organisation_path, input_html: { class: "filter-form" }, method: :get do |f| %>
            <% TagCategory.where(company_id: current_user.company_id).order(name: :asc).each do |category| %>
              <div class="filter-form-input"><%= f.input :tag, label: category.name.capitalize, collection: Tag.where(tag_category_id: category.id).map(&:tag_name), as: :check_boxes, input_html: { class: "tag-selector" }, required: false;%></div>
            <% end %>
            <div class=filter-text>
              <%= f.submit 'Filter', class: 'final-filter-btn' %>
              <!-- <button class='final-filter-btn'>Filter</button> -->
          <% end %>
              <a class='final-filter-clear'>Clear All</a>
            </div>
        </div>
      </div>
  </div>

</div>
    <% @users.each do |user| %>
      <%= link_to user_path(user) do %>
        <div class='user-index-card'>
          <img src="<%= user.picture %>" alt="" class='avatar-sm' onerror='this.onerror=null;this.src="<%= asset_url('empty-avatar.png', type: :image) %>";'>
          <div class="user-index-infos flex-row-between-centered">
            <div class="user-index-info">
              <p data-toggle="tooltip" title="<%= user.fullname %>"><%= user.fullname %></p>
            </div>
            <div class="user-index-info">
              <p data-toggle="tooltip" title="<%= user.email %>"><%= user.email %></p>
            </div>
            <div class="user-index-info">
              <% tags = '' %>
              <% user.tags.each do |tag| %>
                <% if tag == user.tags.last %>
                  <% tags += "#{tag.tag_name}" %>
                <% else %>
                  <% tags += "#{tag.tag_name}, " %>
                <% end %>
              <% end %>
              <p data-toggle="tooltip" title="<%= tags %>"><%= tags %></p>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
<!-- </div>
 -->
<!-- Modals -->
<div class='modal fade' id='newTag' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'tags/new', tag: Tag.new %>
  </div>
</div>

<div class='modal fade' id='newUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/new', tag: User.new %>
  </div>
</div>

<div class='modal fade' id='importUsers' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/import', tag: User.new %>
  </div>
</div>

<script>
  searchButton = document.querySelector('.btn-search');
  searchBar = document.querySelector('.search-bar');
  searchClose = document.querySelector('.search-close');
  searchButton.addEventListener('click', (event) => {
    searchButton.classList.toggle('hidden');
    searchBar.classList.toggle('hidden');
  })
  searchClose.addEventListener('click', (event) => {
    searchButton.classList.toggle('hidden');
    searchBar.classList.toggle('hidden');
  })


  /* When the user clicks on the button,
  toggle between hiding and showing the dropdown content */
  function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
  }

  // Close the dropdown if the user clicks outside of it
  window.onclick = function(event) {
    if (!event.target.matches('.filter-dropbtn')) {
      var dropdowns = document.getElementsByClassName("filter-dropdown-content");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown.classList.contains('show')) {
          openDropdown.classList.remove('show');
        }
      }
    }
  }

  $('.filter-dropbtn').click(function(){
    $(this).parent().toggleClass('open');
  });
</script>

<script>
  clear_button = document.querySelector('.final-filter-clear');
  check_boxes = document.querySelectorAll('.check_boxes');
  clear_button.addEventListener('click', (event) => {
    event.preventDefault();
    check_boxes.forEach(element => {
      element.checked = false;
    })
  })
</script>
