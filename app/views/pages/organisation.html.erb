<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.min.js"></script>
<%= paginate @users, remote: true %>
<div class="organisation-main-container">
  <%= render 'organisation_ajax', users: @users, unfiltered: @unfiltered %>
</div>
<div class="organisation-main-container organisation-main-container-filtered hidden">
  <%= render 'organisation_ajax', users: [], unfiltered: @unfiltered %>
</div>
<div class="organisation-filter-container">
  <div class="organisation-filter-background" onclick='closeFilter();'></div>
  <div class="organisation-filter-dropright">
    <%= render 'organisation_filter_dropright' %>
  </div>
</div>
<div class="organisation-manage-users-container">
  <div class="organisation-manage-users-background" onclick='closeManager();'></div>
  <div class="organisation-manage-users-dropright">
    <%= render 'organisation_manage_users_dropright', users: @users %>
  </div>
</div>


<!-- Modals -->
<div class='modal fade' id='newUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/new' %>
  </div>
</div>

<div class='modal fade' id='importUsers' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/import' %>
  </div>
</div>

<div class='modal fade' id='exportUsers' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/export' %>
  </div>
</div>

<div class='modal fade' id='importUsersInfos' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-import-infos' role='document' style='border-radius: 20px'>
    <%= render 'users/import_infos', errors: [], creating: [], updating: [] %>
  </div>
</div>

<script>
  $(document).ready(function () {
    $(".organisation-page").floatingScroll();
  });
</script>

<script>

  function clearSearch(element) {
    search_input = element.parentNode.querySelector('input');
    search_input.value = ' ';
    element.classList.add('hidden');
    document.querySelector('.organisation-main-container').classList.remove('hidden')
    document.querySelector('.organisation-main-container-filtered').classList.add('hidden')
  }

  if (document.querySelector('.search') != null) {
    search_input = document.querySelector('.search').querySelector('input');
    clear_button = document.getElementById('user-search-clear');
    search_input.addEventListener('keyup', event => {
      if (search_input.value != '' && clear_button.classList.contains('hidden')) {
        clear_button.classList.remove('hidden');
      } else if (search_input.value == '') {
        clear_button.classList.add('hidden');
      }
    })
  }

  formGuardian = false;
  doubleClickGuardian = false;
  setTimeout(function(){
    document.querySelector('#user_email').value = ''
    document.querySelector('#user_password').value = ''
  }, 100)

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0;i < len;i++)  {
        if (event.target == notelem[i] || notelem[i].contains(event.target)) {
            clickedOut = false;
        }
    }
    if (clickedOut) return true;
    else return false;
  }

  function openForm(element) {
    if (doubleClickGuardian == false) {
      console.log('test')
      doubleClickGuardian = true
      element.classList.toggle('hidden')
      form = element.parentNode.querySelector('.hidden-form-category-ajax')
      form.classList.toggle('hidden')
      setTimeout(function(){doubleClickGuardian = false}, 10)

      window.addEventListener('click', function(e) {
        if (outsideClick(e, form) && doubleClickGuardian == false) {
          form.classList.toggle('hidden')
          element.classList.toggle('hidden')
          this.removeEventListener('click', arguments.callee, false)
        }
      });
    }
  }

  function openFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_container.style.display = 'flex';
    setTimeout(function(){
      filter_dropright.style.width = '400px';
    }, 1);
  }

  function closeFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_dropright.style.width = '0px';
    setTimeout(function(){
      filter_container.style.display = 'none';
    }, 250);
  }

  function openManager() {
    manage_users_container = document.querySelector('.organisation-manage-users-container');
    manage_users_dropright = document.querySelector('.organisation-manage-users-dropright');
    manage_users_container.style.display = 'flex';
    setTimeout(function(){
      manage_users_dropright.style.width = '400px';
    }, 1);
  }

  function closeManager() {
    filter_container = document.querySelector('.organisation-manage-users-container');
    filter_dropright = document.querySelector('.organisation-manage-users-dropright');
    filter_dropright.style.width = '0px';
    setTimeout(function(){
      filter_container.style.display = 'none';
    }, 250);
  }


  function toggleTagCategoryDropdown(element) {
    caret = element.querySelector('i')
    angle = parseInt(caret.getAttribute('data-rotated'), 10)
    caret.style.webkitTransform = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.mozTransform    = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.msTransform     = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.oTransform      = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.transform       = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.setAttribute('data-rotated', (angle + 180).toString())
    block = element.parentNode.parentNode.parentNode.parentNode;
    if (block.style.maxHeight == '61px' || block.style.maxHeight == '') {
      block.style.maxHeight = '10000px';
      block.classList.add('active');
    } else {
      block.style.maxHeight = '61px';
      block.classList.remove('active');
    }
  }

  function hideClearFilterButton() {
    form = document.querySelector('.filter_user');
    form.querySelectorAll('.organisation-filter-block').forEach((element) => {
      checked = false;
      element.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.checked == true) {
          checked = true;
        }
      })
      if (checked == false) {
        element.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '0';
      }
    })
  }

  function hideClearManagerButton() {
    form = document.querySelector('.add_tags');
    form.querySelectorAll('.organisation-manage-users-block').forEach((element) => {
      checked = false;
      element.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.checked == true) {
          checked = true;
        }
      })
      if (checked == false) {
        element.querySelector('.organisation-manage-users-block-title-buttons').querySelector('p').style.opacity = '0';
      } else {
        element.querySelector('.organisation-manage-users-block-title-buttons').querySelector('p').style.opacity = '1';
      }
    })
  }

  function autoSubmit(element) {
    element.parentNode.parentNode.parentNode.parentNode.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '1';
    hideClearFilterButton();
    document.querySelector('.filter_user').querySelector('.hidden-submit').click();
    document.querySelector('body').classList.add('wait');
  }

  function clearFilter(element) {
    block = element.parentNode.parentNode.parentNode.parentNode;
    block.querySelectorAll('input.check_boxes').forEach((element) => {
      if (element.checked == true) {
        element.checked = false;
      }
    })
    hideClearFilterButton();
    document.querySelector('.filter_user').querySelector('.hidden-submit').click();
    document.querySelector('body').classList.add('wait');
  }

  function clearFilterManager(element) {
    block = element.parentNode.parentNode.parentNode.parentNode;
    block.querySelectorAll('input.check_boxes').forEach((element) => {
      if (element.checked == true) {
        element.checked = false;
      }
    })
    hideClearManagerButton();
  }

  function resetFilter() {
    form = document.querySelector('.filter_user');
    form.querySelectorAll('.check_boxes').forEach((element) => {
      if (element.checked == true) {
        element.checked = false;
      }
    })
    hideClearFilterButton();
    form.querySelector('.hidden-submit').click();
    document.querySelector('body').classList.add('wait');
  }

  function removeJob(element) {
    form = document.querySelector('.filter_user');
    job = element.parentNode.getAttribute("name");
    form.querySelector('.filter_user_job').querySelectorAll('input.check_boxes').forEach((checkbox) => {
      if (checkbox.value == job) {
        checkbox.checked = false;
        form.querySelector('.hidden-submit').click();
        document.querySelector('body').classList.add('wait');
      }
    })
  }

  function removeTag(element) {
    form = document.querySelector('.filter_user');
    job = element.parentNode.getAttribute("name");
    form.querySelectorAll('.filter_user_tag').forEach((category) => {
      category.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.value == job) {
          checkbox.checked = false;
          form.querySelector('.hidden-submit').click();
          document.querySelector('body').classList.add('wait');
        }
      })
    })
  }

  function selectUser() {
    ids = []
    check_boxes = document.querySelectorAll('.select-user')
    check_boxes.forEach((checkbox) => {
      if (checkbox.checked == true) {
        ids.push(checkbox.value);
        checkbox.parentNode.parentNode.style.backgroundColor = '#F8D9C8'
      } else {
        checkbox.parentNode.parentNode.style.backgroundColor = 'white'
      }
    })
    document.querySelector('#add_tags_users').value = ids.join();
    if (ids.length == 0) {
      document.querySelector('#manage-users-button').classList.remove('flashing_button')
      document.getElementById('export-users-modal-link').innerHTML = 'Export Users'
    } else {
      document.querySelector('#manage-users-button').classList.add('flashing_button')
      document.getElementById('export-users-modal-link').innerHTML = 'Export Selected Users'
    }
  }

  function clearInput(element) {
    form = element.parentNode.parentNode;
    form.querySelector('.hidden-submit').click();
    document.querySelector('body').classList.add('wait');
  }

  function fetchCategoryForm(element) {
    if (doubleClickGuardian == false) {
      doubleClickGuardian = true;
      form = document.querySelector(element.getAttribute('data-target'));
      initial_top = form.offsetTop
      initial_left = form.offsetLeft
      opened_blocks = []
      document.querySelectorAll('.organisation-manage-users-block.active').forEach((block) => {
        opened_blocks.push(block.getAttribute('data-category'));
      })
      form.querySelector('.hidden-submit').value = opened_blocks.join(',');
      if (element.getAttribute('data-target').split('-')[0] == '#edit') {
        controls = element.parentNode.parentNode
        controls.style.opacity = 0
        form.style.top = (controls.offsetTop - 1).toString() + 'px';
        form.style.left = (controls.offsetLeft + 25).toString() + 'px'
      } else if (element.getAttribute('data-target').split('-')[0] == '#edit_tag') {
        controls = element.parentNode.parentNode.querySelector('label')
        controls.style.opacity = 0
        form.style.top = (controls.offsetTop - 8).toString() + 'px';
        form.style.left = (controls.offsetLeft + 8).toString() + 'px'
      } else {
        form.style.top = (element.offsetTop - 2).toString() + 'px';
        form.style.left = (element.offsetLeft + 24).toString() + 'px'
      }
      // element.parentNode.querySelector('p').style.opacity = '0';
      form.classList.toggle('hidden');
      target_input = form.querySelector('input')
      target_input.focus()
      val = target_input.value;
      target_input.value = '';
      target_input.value = val;
      form.querySelector('input').addEventListener('keypress', function(e) {
        if (event.which == '13') {
          spinningLoader();
        }
      })
      setTimeout(function(){
        doubleClickGuardian = false;
      }, 1);

      window.addEventListener('click', function(e) {
        if (outsideClick(e, form) && doubleClickGuardian == false) {
          if (element.getAttribute('data-target').split('-')[0] == '#edit' || element.getAttribute('data-target').split('-')[0] == '#edit_tag') {
            controls = element.parentNode.parentNode
            controls.style.opacity = 1
          } else {
            form.querySelector('input').value = ''
          }
          form.style.top = initial_top.toString() + 'px';
          form.style.left = initial_left.toString() + 'px';
          // element.parentNode.querySelector('p').style.opacity = '1';
          form.classList.toggle('hidden');
          this.removeEventListener('click', arguments.callee, false);
        }
      });
    }
  }

  function applyToUsers(element) {
    element.parentNode.querySelector('.hidden-submit').click()
    document.querySelector('body').classList.add('wait')
    document.querySelector('.organisation-manage-users-dropright').querySelectorAll('input').forEach((input) => {
      if (input.type == 'checkbox') {
        input.checked = false;
      }
    })
  }

  function showDelete(element) {
    // element.parentNode.querySelector('.category-delete').classList.toggle('hidden');
    controls = element.querySelectorAll('.tag_delete');
    controls.forEach((control) => {
      if (control.style.opacity == 0) {
        control.style.opacity = 1;
      } else {
        control.style.opacity = 0;
      }
    })
  }

  function toggle(source) {
    checkboxes = document.querySelectorAll('.select-user');
    for(var i=0, n=checkboxes.length;i<n;i++) {
      checkboxes[i].checked = source.checked;
    }
    selectUser();
  }

  function selectAllAttributes(element) {
    form = element.closest('form')
    checkboxes = form.querySelectorAll('input[type="checkbox"]')
    if (checkboxes[1].checked == true) {
      checkboxes.forEach((el) => {
        el.checked = false
      })
    } else {
      checkboxes.forEach((el) => {
        el.checked = true
      })
    }
  }

  function exportUsers(element) {
    users_array = []
    document.querySelectorAll('.select-user:checked').forEach((el) => {
      users_array.push(el.value)
    })
    element.closest('form').querySelector('#csv_selected_users').value = users_array.join(',')
    element.closest('.modal-content').querySelector('.btn-icon').click()
    element.parentNode.querySelector('.hidden-submit').click()
  }

  function clearSearchBis() {
    document.location.reload()
  }

  function spinningLoader() {
    document.querySelector('body').classList.add('wait');
  }

  function infiniteScroll() {
    if ($("nav ul.pagination a[rel=next]").length) {
      $('.users-index').infiniteScroll({
        path: "nav ul.pagination a[rel=next]",
        append: ".user-index-card",
        hideNav: "nav ul.pagination",
        history: false,
        scrollThreshold: 3000,
        debug: false,
        loadOnScroll: true,
      });
    };
  }

  infiniteScroll()

  tag_category_names = document.querySelectorAll('#tag_category_name')
  tag_category_names.forEach((element) => {
    element.addEventListener('keypress', function(e) {
      if (event.which == '13') {
        spinningLoader();
      }
    })
  })
</script>
