<div class="organisation-main-container">
  <%= render 'organisation_ajax' %>
</div>
<div class="organisation-filter-container">
  <div class="organisation-filter-background" onclick='closeFilter();'></div>
  <div class="organisation-filter-dropright">
    <div class="organisation-filter-controls">
      <div class='organisation-filter-controls-title'>
        <i class="fas fa-filter"></i>
        <p>Filter options</p>
      </div>
      <div class="organisation-filter-controls-buttons">
        <div class="btn-icon" onclick='closeFilter();'>
          <i class="fas fa-times"></i>
        </div>
      </div>
    </div>
    <%= simple_form_for :filter, url: organisation_path, method: :get, remote: true, input_html: {multipart: true} do |f| %>
      <div class="organisation-filter-block">
        <div class="organisation-filter-block-title">
          <div>
            <p>Job Title</p>
            <div class="organisation-filter-block-title-buttons">
              <p onclick='clearFilter(this);'>Clear</p>
              <div class="btn-icon" onclick='toggleTagCategoryDropdown(this);'>
                <i class="fas fa-angle-down"></i>
              </div>
            </div>
          </div>
        </div>
        <div class="organisation-filter-block-checkboxes">
            <%= f.input :job, collection: User.where(company_id: current_user.company_id).map(&:job_title).uniq.reject{|x| x.empty?}.sort, as: :check_boxes, legend_tag: false, label: false, input_html: {onclick: 'autoSubmit(this);'} %>
        </div>
      </div>
      <% TagCategory.where(company_id: current_user.company_id).order(position: :asc).each do |tag_category| %>
        <div class="organisation-filter-block">
          <div class="organisation-filter-block-title">
            <div>
              <p><%= tag_category.name %></p>
              <div class="organisation-filter-block-title-buttons">
                <p onclick='clearFilter(this);'>Clear</p>
                <div class="btn-icon" onclick='toggleTagCategoryDropdown(this);'>
                  <i class="fas fa-angle-down"></i>
                </div>
              </div>
            </div>
          </div>
          <div class="organisation-filter-block-checkboxes">
              <%= f.input :tag, collection: Tag.where(tag_category_id: tag_category.id).map(&:tag_name), as: :check_boxes, legend_tag: false, label: false, input_html: {onclick: 'autoSubmit(this);'} %>
          </div>
        </div>
      <% end %>
      <%= f.submit 'Filter', class: 'hidden hidden-submit' %>
    <% end %>
    <div class="centered-item" style='margin-top: 2rem;'>
      <div class="btn-white" onclick='resetFilter()'>
        <i class="fas fa-times-circle"></i>
        <p>Reset Filter</p>
      </div>
    </div>
  </div>
</div>
<div class="organisation-manage-users-container">
  <div class="organisation-manage-users-background" onclick='closeManager();'></div>
  <div class="organisation-manage-users-dropright">
    <%= render 'organisation_manage_users_dropright' %>
  </div>
</div>


<!-- Modals -->
<div class='modal fade' id='newTagCategory' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'tag_categories/new', tag_category: TagCategory.new %>
  </div>
</div>

<div class='modal fade' id='newTag' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'tags/new', tag: Tag.new %>
  </div>
</div>

<div class='modal fade' id='newUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/new', tag: User.new %>
  </div>
</div>

<div class='modal fade' id='importUsers' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/import', tag: User.new %>
  </div>
</div>

<script>
  function openForm(element) {
    element.classList.toggle('hidden');
    element.parentNode.querySelector('.hidden-form-category-ajax').classList.toggle('hidden');
  }

  function openFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_container.style.display = 'flex';
    setTimeout(function(){
      filter_dropright.style.width = '400px';
    }, 1);
  }

  function closeFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_dropright.style.width = '0px';
    setTimeout(function(){
      filter_container.style.display = 'none';
    }, 250);
  }

  function openManager() {
    manage_users_container = document.querySelector('.organisation-manage-users-container');
    manage_users_dropright = document.querySelector('.organisation-manage-users-dropright');
    manage_users_container.style.display = 'flex';
    setTimeout(function(){
      manage_users_dropright.style.width = '400px';
    }, 1);
  }

  function closeManager() {
    filter_container = document.querySelector('.organisation-manage-users-container');
    filter_dropright = document.querySelector('.organisation-manage-users-dropright');
    filter_dropright.style.width = '0px';
    setTimeout(function(){
      filter_container.style.display = 'none';
    }, 250);
  }

  rotated = 0;

  function toggleTagCategoryDropdown(element) {
    element.querySelector('i').style.webkitTransform = 'rotate('+ (rotated + 180).toString() +'deg)';
    element.querySelector('i').style.mozTransform    = 'rotate('+ (rotated + 180).toString() +'deg)';
    element.querySelector('i').style.msTransform     = 'rotate('+ (rotated + 180).toString() +'deg)';
    element.querySelector('i').style.oTransform      = 'rotate('+ (rotated + 180).toString() +'deg)';
    element.querySelector('i').style.transform       = 'rotate('+ (rotated + 180).toString() +'deg)';
    rotated = rotated + 180;
    block = element.parentNode.parentNode.parentNode.parentNode;
    if (block.style.maxHeight == '61px' || block.style.maxHeight == '') {
      block.style.maxHeight = '1000px';
    } else {
      block.style.maxHeight = '61px';
    }
  }


  function autoSubmit(element) {
    element.parentNode.parentNode.parentNode.parentNode.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '1';
    hideClearButton();
    document.querySelector('.filter').querySelector('.hidden-submit').click();
  }

  function hideClearButton() {
    form = document.querySelector('.filter');
    form.querySelectorAll('.organisation-filter-block').forEach((element) => {
      checked = false;
      element.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.checked == true) {
          checked = true;
        }
      })
      if (checked == false) {
        element.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '0';
      }
    })
  }

  function clearFilter(element) {
    block = element.parentNode.parentNode.parentNode.parentNode;
    block.querySelectorAll('input.check_boxes').forEach((element) => {
      if (element.checked == true) {
        element.checked = false;
      }
    })
    hideClearButton();
    document.querySelector('.filter').querySelector('.hidden-submit').click();
  }

  function resetFilter() {
    form = document.querySelector('.filter');
    form.querySelectorAll('.check_boxes').forEach((element) => {
      if (element.checked == true) {
        element.checked = false;
      }
    })
    hideClearButton();
    form.querySelector('.hidden-submit').click();
  }

  function removeJob(element) {
    form = document.querySelector('.filter');
    job = element.parentNode.getAttribute("name");
    form.querySelector('.filter_job').querySelectorAll('input.check_boxes').forEach((checkbox) => {
      if (checkbox.value == job) {
        checkbox.checked = false;
        form.querySelector('.hidden-submit').click();
      }
    })
  }

  function removeTag(element) {
    form = document.querySelector('.filter');
    job = element.parentNode.getAttribute("name");
    form.querySelectorAll('.filter_tag').forEach((category) => {
      category.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.value == job) {
          checkbox.checked = false;
          form.querySelector('.hidden-submit').click();
        }
      })
    })
  }

  function selectUser() {
    ids = []
    check_boxes = document.querySelectorAll('.select-user')
    check_boxes.forEach((checkbox) => {
      if (checkbox.checked == true) {
        ids.push(checkbox.value);
      }
    })
    document.querySelector('#add_tags_users').value = ids.join();
  }

  function clearInput(element) {
    form = element.parentNode.parentNode;
    form.querySelector('.hidden-submit').click();
    form.querySelector('input').value = '';
  }

  function fetchCategoryForm(element) {
    form = document.querySelector(element.getAttribute('data-target'));
    console.log(element.offsetTop);
    console.log(element.offsetLeft);
    form.style.top = (element.offsetTop - 7).toString() + 'px';
    form.style.left = element.offsetLeft.toString() + 'px';
    form.classList.toggle('hidden');
  }
</script>
