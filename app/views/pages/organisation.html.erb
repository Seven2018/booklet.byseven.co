<div class="organisation__container">

  <div class="organisation__main">
    <%= render 'pages/organisation/organisation_users_list', users: @users %>
  </div>

</div>

<!------------>
<!-- MODALS -->
<!------------>

<div class='modal action-modal fade' id='newUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog' role='document' style='border-radius: 20px'>
    <%= render 'users/modals/new' %>
  </div>
</div>

<div class='modal fade' id='userCreated' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-user' role='document' style='border-radius: 20px'>
    <%= render 'users/modals/user_created' %>
  </div>
</div>

<div class='modal fade' id='removeUser' tabindex='-1' role='dialog' aria-labelledby='myModalLabel'  data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-user' role='document' style='border-radius: 20px'>
    <%= render 'users/modals/remove_user' %>
  </div>
</div>

<div id='importUsers'
     class='modal action-modal fade'
     tabindex='-1'
     role='dialog'
     data-backdrop="static"
     data-keyboard="false">

  <div class='modal-dialog action-modal__dialog'
       role='document'>
    <%= render 'users/modals/import' %>
  </div>

</div>

<div id='importUsersInfos'
     class='modal action-modal fade'
     tabindex='-1'
     role='dialog'
     data-backdrop="static"
     data-keyboard="false">

  <div class='modal-dialog action-modal__dialog modal-lg modal-import-infos min-w-60vw'
       role='document'>
    <%= render 'users/modals/import_infos', errors: [], creating: [], updating: [], deleting: [] %>
  </div>

</div>

<div id='exportUsers'
     class='modal action-modal fade'
     tabindex='-1'
     role='dialog'
     data-backdrop="static"
     data-keyboard="false">

  <div class='modal-dialog action-modal__dialog'
       role='document'>
    <%= render 'users/modals/export' %>
  </div>

</div>

<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  $(document).ready(function () {
    $(".organisation__users").floatingScroll();
  });
</script>

<script>

  ///////////
  // TOOLS //
  ///////////

  formGuardian = false;
  doubleClickGuardian = false;

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0;i < len;i++)  {
        if (event.target == notelem[i] || notelem[i].contains(event.target)) {
            clickedOut = false;
        }
    }
    if (clickedOut) return true;
    else return false;
  }


  ///////////////
  // SEARCHBAR //
  ///////////////

  function showResetMobile(element, boolean) {
    search_button = element.querySelector('.btn-search--mobile')
    reset_button = element.querySelector('.btn-reset--mobile')
    if (boolean) {
      search_button.classList.add('hidden')
      reset_button.classList.remove('hidden')
    } else {
      search_button.classList.remove('hidden')
      reset_button.classList.add('hidden')
    }
  }


  /////////////
  // FILTERS //
  /////////////

  function toggleTagCategoryDropdown(element) {
    caret = element.querySelector('i')
    angle = parseInt(caret.getAttribute('data-rotated'), 10)
    caret.style.webkitTransform = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.mozTransform    = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.msTransform     = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.oTransform      = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.transform       = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.setAttribute('data-rotated', (angle + 180).toString())
    block = element.parentNode.parentNode.parentNode.parentNode;
    if (block.style.maxHeight == '61px' || block.style.maxHeight == '') {
      block.style.maxHeight = '10000px';
      block.classList.add('active');
    } else {
      block.style.maxHeight = '61px';
      block.classList.remove('active');
    }
  }

  function selectUser(element) {
    ids = []
    main_container = document.querySelector('.organisation__main')
    check_boxes = main_container.querySelectorAll('.select-user')

    element_checkbox = element.parentNode.querySelector('.select-user')
    element_checkbox.checked = !element_checkbox.checked
    const event = new Event('change');

    element_checkbox.dispatchEvent(event)

    if (element_checkbox.checked) {
      element.classList.add('active')
    } else {
      element.classList.remove('active')
    }

    check_boxes.forEach((input) => {
      if (input.checked) {
        ids.push(input.id.split('-')[1])
      }
    })

    // Remove Selected Users Setup //
    unlink_button_interface = main_container.querySelector('.organisation__dropdown-menu').querySelector('#organisation-dropdown__remove-user-redirect')
    unlink_button = document.querySelector('#unlink_users')
    unlink_href = new URL(unlink_button.href)
    unlink_href.searchParams.set('selected_users', ids.join(','))
    unlink_button.href = unlink_href.href

    if (ids.length == 0) {
      main_container.querySelector('#export-users-modal-link').innerHTML = 'Export All Users'
      unlink_button_interface.closest('li').classList.add('hidden')
    } else {
      main_container.querySelector('#export-users-modal-link').innerHTML = 'Export Selected Users'
      if (ids.length == 1) {
        unlink_button_interface.innerHTML = 'Remove Selected User'
      } else {
        unlink_button_interface.innerHTML = 'Remove ' + ids.length.toString() + ' Selected Users'
      }
      unlink_button_interface.closest('li').classList.remove('hidden')
    }
  }

  function removeTag(element) {
    opened_blocks = []
    document.querySelectorAll('.organisation-manage-users-block.active').forEach((block) => {
      opened_blocks.push(block.getAttribute('data-category'))
    })
    element.href = element.href + '&commit=' + opened_blocks.join(',');
  }

  function applyToUsers(element) {
    element.parentNode.querySelector('.hidden-submit').click()
    document.querySelector('body').classList.add('wait')
    document.querySelector('.organisation-manage-users-dropright').querySelectorAll('input').forEach((input) => {
      if (input.type == 'checkbox') {
        input.checked = false;
      }
    })
  }


  /////////////////
  // CREATE USER //
  /////////////////

  function userCreated() {
    document.querySelector("#newUser").querySelector(".cancel-close").click()
    user_email = document.querySelector('#user_email').value
    search_input = document.querySelector('#search_name')
    search_input.value = user_email
    search_input.closest('form').querySelector('.btn-search').click()
    new_user_form = document.querySelector('#new_user')
    new_user_form.querySelectorAll('input').forEach((input) => {
      input.value = ''
    })
  }


  //////////////////
  // EXPORT USERS //
  //////////////////

  function exportUsers(element) {
    users_array = []
    modal = element.closest('.modal-content')

    document.querySelectorAll('.select-user:checked').forEach((el) => {
      users_array.push(el.value)
    })
    modal.querySelector('#csv_selected_users').value = users_array.join(',')
    modal.querySelector('.action-modal__close').click()
    modal.querySelector('.hidden-submit').click()
  }

  function selectCsvAttributes(element, color) {
    icon = element.querySelector('i')
    checkbox = element.querySelector('input[type="checkbox"]')
    if (checkbox.checked == false) {
      checkbox.checked = true
      element.style.backgroundColor = color
      element.style.color = 'white'
      icon.style.transform = 'rotate(225deg)'
    } else {
      checkbox.checked = false
      element.style.backgroundColor = 'white'
      element.style.color = color
      icon.style.transform = 'rotate(-0deg)'
    }
  }

  function checkCsvAttributes(color) {
    document.querySelectorAll('.modal-filter__pill').forEach((pill) => {
      icon = pill.querySelector('i')
      checkbox = pill.querySelector('input[type="checkbox"]')
      if (checkbox.checked == false) {
        checkbox.checked = false
        pill.style.backgroundColor = 'white'
        pill.style.color = color
        icon.style.transform = 'rotate(-0deg)'
      } else {
        checkbox.checked = true
        pill.style.backgroundColor = color
        pill.style.color = 'white'
        icon.style.transform = 'rotate(225deg)'
      }
    })
  }

  function selectAllAttributes(element, color) {
    selectCsvAttributes(element)
    form = element.closest('form')
    checkboxes = form.querySelectorAll('input[type="checkbox"]')
    if (checkboxes[1].checked == true) {
      checkboxes.forEach((el) => {
        el.checked = false
      })
    } else {
      checkboxes.forEach((el) => {
        el.checked = true
      })
    }
    checkCsvAttributes(color)
  }


  //////////////////
  // IMPORT USERS //
  //////////////////

  function importSummary(element) {
    document.querySelector('body').classList.add('wait')
    element.classList.add('disabled')
    element.disabled = true
    element.closest('form').querySelector('.hidden-submit').click()
  }

  function fileTransfer(element, send_invite) {
    form = document.querySelector('.import_users_form')
    submit_button = form.querySelector('button')
    send_invite_input = form.querySelector('#send_invite')
    submit_button.value = 'import'
    if (send_invite) send_invite_input.value = true
    submit_button.click()
  }


  //////////
  // MISC //
  //////////

  tag_category_names = document.querySelectorAll('#tag_category_name')
  tag_category_names.forEach((element) => {
    element.addEventListener('keypress', function(e) {
      if (event.which == '13') {
        document.querySelector('body').classList.add('wait')
      }
    })
  })
</script>
