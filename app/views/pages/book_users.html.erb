<script src="https://unpkg.com/infinite-scroll@4/dist/infinite-scroll.pkgd.min.js"></script>
<div class="book-container">
    <div class="book-controls">
    <%= simple_form_for :book, url: book_contents_path, method: :get do |f| %>
      <% params[:book].present? ? selected_folder = params[:book][:selected_folder] : selected_folder = '' %>
      <% params[:book].present? ? selected_content = params[:book][:selected_content] : selected_content = '' %>
      <% params[:book].present? ? selected_users = params[:book][:selected_users] : selected_users = '' %>
      <%= f.hidden_field :selected_folder, value: @selected_folder %>
      <%= f.hidden_field :selected_content, value: @selected_content %>
      <%= f.hidden_field :selected_users, value: @selected_users %>
      <%= button_tag type: 'submit' do %>
          <p>Select a Program</p>
      <% end %>
    <% end %>
    <button class='active'><p>Select Participants</p></button>
    <%= simple_form_for :book, url: book_dates_path, method: :get do |f| %>
      <% params[:book].present? ? selected_folder = params[:book][:selected_folder] : selected_folder = '' %>
      <% params[:book].present? ? selected_content = params[:book][:selected_content] : selected_content = '' %>
      <% params[:book].present? ? selected_users = params[:book][:selected_users] : selected_users = '' %>
      <%= f.hidden_field :selected_folder, value: @selected_folder %>
      <%= f.hidden_field :selected_content, value: @selected_content %>
      <%= f.hidden_field :selected_users, value: @selected_users %>
      <%= button_tag type: 'submit' do %>
        <p>Select Dates</p>
      <% end %>
    <% end %>
  </div>
  <div class="index-controls-filter-bar-book">
    <%= render 'shared/searchbar', path: book_users_path, reset_path: book_users_path(reset: "") %>
  </div>
<!--     <div class="add-remove-users">
      <p onclick='selectAllUsers(true);' style='cursor:pointer;' class='add-selected'>Add All</p>
      <p onclick='selectAllUsers(false);' style='cursor:pointer;' class='remove-selected'>Remove all</p>
    </div> -->
  <div class="organisation-filter-container">
    <div class="organisation-filter-background" onclick='closeFilter();'></div>
    <div class="organisation-filter-dropright">
      <%= render 'pages/partials/book_user_filter_dropright' %>
    </div>
  </div>
  <%# selected_filter = [] %>
 <!--  <div class="book-user-filter-tags">
    <%# render 'pages/partials/book_user_filter_tags', selected_filter: selected_filter %>
  </div> -->
  <div class="book-users-lists__container">
    <%= paginate @users, remote: true, param_name: :page %>
    <div class='book-users-lists'>
      <div class="book-users-headers">
        <div class="book-users-card">
          <input type="checkbox" class='hidden'>
          <div class="book-users-pseudo-checkbox-container"><button class="book-users-pseudo-checkbox"></button></div>
          <div class="book-users-card-infos">
            <div>
              <p>Fullname</p>
            </div>
            <div>
              <p>Email</p>
            </div>
            <% TagCategory.where(company_id: current_user.company_id).each do |tag_category| %>
              <div>
                <p><%= tag_category.name %></p>
              </div>
            <% end %>
          </div>
        </div>
      </div>
      <div class="book-users-all">
        <%= render 'pages/partials/book_user_index', users: @users, selected_users: @selected_users, selected: 'false' %>
      </div>
      <div class="book-users-filtered hidden">
        <%= render 'pages/partials/book_user_index', users: @users, selected_users: @selected_users, selected: 'false' %>
      </div>
    </div>
    <div class="book-users-selected">
      <div class="book-users-headers-selected">
        <p>SELECTED EMPLOYEES</p>
      </div>
      <%= render  'pages/partials/book_user_index', users: User.where(id: @selected_users.split(',')), selected: 'true' %>
      <div class="book-users-card book-users-card-template hidden">
        <div class="book-users-pseudo-checkbox-container" onclick="selectUser(this);"><button class="book-users-pseudo-checkbox"></button></div>
        <input type="checkbox" class="book-users-checkbox hidden" checked=''>
        <div class="book-users-card-infos">
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function openFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_container.style.display = 'flex';
    setTimeout(function(){
      filter_dropright.style.width = '400px';
    }, 1);
  }

  function closeFilter() {
    filter_container = document.querySelector('.organisation-filter-container');
    filter_dropright = document.querySelector('.organisation-filter-dropright');
    filter_dropright.style.width = '0px';
    setTimeout(function(){
      filter_container.style.display = 'none';
    }, 250);
  }

  function toggleTagCategoryDropdown(element) {
    caret = element.querySelector('i')
    angle = parseInt(caret.getAttribute('data-rotated'), 10)
    caret.style.webkitTransform = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.mozTransform    = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.msTransform     = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.oTransform      = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.style.transform       = 'rotate('+ (angle + 180).toString() +'deg)';
    caret.setAttribute('data-rotated', (angle + 180).toString())
    block = element.parentNode.parentNode.parentNode.parentNode;
    if (block.style.maxHeight == '61px' || block.style.maxHeight == '') {
      block.style.maxHeight = '10000px';
      block.classList.add('active');
    } else {
      block.style.maxHeight = '61px';
      block.classList.remove('active');
    }
  }

  function autoSubmit(element) {
    element.parentNode.parentNode.parentNode.parentNode.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '1';
    hideClearFilterButton();
    document.querySelector('.filter_user').querySelector('.hidden-submit').click();
    document.querySelector('body').classList.add('wait');
  }

  function hideClearFilterButton() {
    form = document.querySelector('.filter_user');
    form.querySelectorAll('.organisation-filter-block').forEach((element) => {
      checked = false;
      element.querySelectorAll('input.check_boxes').forEach((checkbox) => {
        if (checkbox.checked == true) {
          checked = true;
        }
      })
      if (checked == false) {
        element.querySelector('.organisation-filter-block-title-buttons').querySelector('p').style.opacity = '0';
      }
    })
  }

  function searchInput(element) {
    if (element.value != '') {
      element.closest('.searchbar').querySelector('.btn-reset-form').classList.remove('hidden')
    } else {
      element.closest('.searchbar').querySelector('.btn-reset-form').classList.add('hidden')
    }
  }

  function resetInput(element) {
    element.closest('.searchbar').querySelector('input').value = ''
    element.closest('.searchbar').querySelector('.btn-search').click()
    element.closest('.searchbar').querySelector('.btn-reset-form').classList.add('hidden')
  }

  function selectUser(element) {
    user_card = element.parentNode
    user_card_infos = user_card.querySelector('.book-users-card-infos')
    selected_container = document.querySelector('.book-users-selected')
    selected_array = []
    checkbox = user_card.querySelector('input[type="checkbox"]')
    checkbox.checked = !checkbox.checked
    document.querySelectorAll('#' + user_card.id).forEach((card) => {
      if(checkbox.checked == true) {
        card.classList.add('selected')
      } else {
        card.classList.remove('selected')
      }
      card.querySelector('input[type="checkbox"]').checked = checkbox.checked
    })
    if (checkbox.checked == true) {
      new_card = document.createElement('div')
      new_card.classList.add('book-users-card', 'selected')
      new_card.id = user_card.id
      template = document.querySelector('.book-users-card-template')
      new_card.innerHTML = template.innerHTML
      new_card_infos = new_card.querySelector('.book-users-card-infos')
      new_info_name = document.createElement('div')
      new_info_name.innerHTML = user_card_infos.querySelectorAll('div')[0].innerHTML
      new_info_email = document.createElement('div')
      new_info_email.innerHTML = user_card_infos.querySelectorAll('div')[1].innerHTML
      new_card_checkbox = new_card.querySelector('input[type="checkbox"]')
      new_card_checkbox.checked = true
      new_card_checkbox.id = 'user' + new_card.id.split('-')[2]
      new_card_infos.appendChild(new_info_name)
      new_card_infos.appendChild(new_info_email)
      document.querySelector('.book-users-selected').appendChild(new_card)
    } else {
      selected_container.querySelector('#' + user_card.id).remove();
    }
    selected_container.querySelectorAll('.selected:not(.book-users-card-template)').forEach((card) => {
      selected_array.push(card.id.split('-')[1])
    })
    document.querySelectorAll('#book_selected_users').forEach((storage) => {
      storage.value = selected_array
    })
    document.getElementById('search_book_selected_users').value = selected_array
  }

  document.querySelectorAll('input[type="checkbox"]').forEach((checkbox) => {
    if (checkbox.checked == true) {
      checkbox.closest('.book-users-card').classList.add('selected')
    }
  })

  function resetAllFilter(element, recommendation = false) {
    searchbar = element.closest('.searchbar')
    searchbar.querySelectorAll('input').forEach((input) => {
      if (input.type == 'text') {
        input.value = ''
      } else if (input.type == 'checkbox') {
        input.checked = false
      }
    })
    searchbar.querySelectorAll('select').forEach((select) => {
      select.selectedIndex = 0
    })
    searchbar.querySelector('.btn-search').click()
  }

  function infiniteScroll() {
    if ($("nav ul.pagination a[rel=next]").length) {
      $('.users-index').infiniteScroll({
        path: "nav ul.pagination a[rel=next]",
        append: ".book-users-card",
        hideNav: "nav ul.pagination",
        history: false,
        scrollThreshold: 3000,
        debug: false,
        loadOnScroll: true,
      });
    };
  }

  infiniteScroll()
</script>
