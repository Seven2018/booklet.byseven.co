



  <% if @interview.crossed? %>
    <div class="interview-summary">
      <h1><%= @interview.interview_form.title %> - <em>Crossed Review</em></h1>
      <div class="manager-answers-colors-info">
        <div class="manager-color-point"></div><p>This color refer to <span style="font-weight:900">manager's</span> answers</p>
      </div>
      <div class="employee-answers-colors-info">
        <div class="employee-color-point"></div><p>This color refer to <span style="font-weight:900">employee's</span> answers</p>
      </div>
      <% k = 1 %>
      <% @questions.order(position: :asc).each do |question| %>

        <% unless question.separator? %>
          <% employee_answer = InterviewAnswer.joins(:interview).find_by(
              interview_id: @interview.interviews.ids,
              interview_question_id: question.id,
              user_id: @employee.id,
              interviews: { label: 'Employee' }
            ) %>
          <% manager_answer = InterviewAnswer.joins(:interview).find_by(
            interview_id: @interview.interviews.ids,
            interview_question_id: question.id,
            user_id: @manager.id,
            interviews: { label: 'HR' }
            ) %>
          <% crossed_answer = InterviewAnswer.joins(:interview).find_by(
            interview_id: @interview.interviews.ids,
            interview_question_id: question.id,
            user_id: @manager.id,
            interviews: { label: 'Crossed' }
            ) %>
        <% end %>

        <% current_answer = crossed_answer.present? ? crossed_answer : manager_answer %>

        <% if question.separator? %>
          <p class='interview-summary__separator'><%= question.question %></p>
        <% elsif question.open_question? %>
          <div class="interview-summary__open-question">
            <div class="flex-row-start-centered">
              <i class="fas fa-question"></i>
              <p><%= question.question %></p>
            </div>
            <%= simple_form_for :interview_answer, url: answer_interview_question_path, remote: true do |f| %>
              <p style="color: #939393"><%= @employee.firstname %>: <%= employee_answer&.answer %></p>
              <p style="color: #3177B7"><%= @manager.firstname %>: <%= current_answer.answer %></p>
              <%= f.input :answer, as: :text, label: false, input_html: {value: current_answer.answer} %>
              <%= f.hidden_field :interview_id, value: @interview.id %>
              <%= f.hidden_field :interview_question_id, value: question.id %>
              <%= f.submit '', class: 'hidden-submit hidden' %>
            <% end %>
          </div>
          <% k += 1 %>
        <% elsif question.mcq? %>
          <div class="interview-summary__mcq">
            <div class="flex-row-start-centered">
              <i class="fas fa-check"></i>
              <p><%= question.question %></p>
            </div>
            <%= simple_form_for :interview_answer, url: answer_interview_question_path, remote: true do |f| %>
              <fieldset class="mcq">
                <%= f.collection_radio_buttons(:answer, question.options.keys.map{|c| [c, c]}, :first, :last) do |b| %>
                  <label class="rad-label">
                    <% if b.text == current_answer.answer %>
                      <%= b.radio_button class: 'rad-input', checked: 'checked' %>
                    <% else %>
                      <%= b.radio_button class: 'rad-input' %>
                    <% end %>
                    <div class="rad-design"></div>
                    <div class="rad-text">
                      <%= b.text %>
                      <% if b.text == manager_answer&.answer && b.text == employee_answer&.answer %>
                        <i class="fas fa-circle manager_answer"></i>
                        <i class="fas fa-circle employee_answer"></i>
                      <% elsif b.text == manager_answer&.answer %>
                        <i class="fas fa-circle manager_answer"></i>
                      <% elsif b.text == employee_answer&.answer %>
                        <i class="fas fa-circle employee_answer"></i>
                      <% end %>
                    </div>
                  </label>
                <% end %>
              </fieldset>
              <%= f.hidden_field :interview_id, value: @interview.id %>
              <%= f.hidden_field :interview_question_id, value: question.id %>
              <%= f.submit '', class: 'hidden-submit hidden' %>
            <% end %>
          </div>
        <% elsif question.rating? %>
          <div class="interview-summary__rating">
            <div class="flex-row-start-centered">
              <i class="far fa-star"></i>
              <p><%= question.question %></p>
            </div>
            <%= simple_form_for :interview_answer, url: answer_interview_question_path, remote: true do |f| %>
              <fieldset class="rating">
                <% for i in 1..question.options.keys.first.to_i %>
                  <% if current_answer.answer.to_i == question.options.keys.first.to_i - i + 1 %>
                    <input type="radio" class='radio-rating' id="star-position(<%= question.position %>)-<%= i %>" name="interview_answer[answer]" value="<%= question.options.keys.first.to_i - i + 1%>" onchange='selectRating(this);' checked/>
                    <label class = "full" for="star-position(<%= question.position %>)-<%= i %>" title="<%= question.options.keys.first.to_i - i + 1 %> stars">
                      <%= question.options.keys.first.to_i - i + 1 %>
                      <div class="saved_answers">
                        <% if (manager_answer&.answer.to_i == question.options.keys.first.to_i - i + 1) && (employee_answer&.answer.to_i == question.options.keys.first.to_i - i + 1) %>
                          <i class="fas fa-circle manager_answer"></i>
                          <i class="fas fa-circle employee_answer"></i>
                        <% elsif manager_answer&.answer.to_i == question.options.keys.first.to_i - i + 1 %>
                          <i class="fas fa-circle manager_answer"></i>
                        <% elsif employee_answer&.answer.to_i == question.options.keys.first.to_i - i + 1 %>
                          <i class="fas fa-circle employee_answer"></i>
                        <% end %>
                      </div>
                    </label>
                  <% else %>
                    <input type="radio" class='radio-rating' id="star-position(<%= question.position %>)-<%= i %>" name="interview_answer[answer]" value="<%= question.options.keys.first.to_i - i + 1%>" onchange='selectRating(this);'/>
                    <label class = "full" for="star-position(<%= question.position %>)-<%= i %>" title="<%= question.options.keys.first.to_i - i + 1 %> stars">
                      <%= question.options.keys.first.to_i - i + 1 %>
                      <div class="saved_answers">
                        <% if (manager_answer&.answer.to_i == question.options.keys.first.to_i - i + 1) && (employee_answer&.answer.to_i == question.options.keys.first.to_i - i + 1) %>
                          <i class="fas fa-circle manager_answer"></i>
                          <i class="fas fa-circle employee_answer"></i>
                        <% elsif manager_answer&.answer.to_i == question.options.keys.first.to_i - i + 1 %>
                          <i class="fas fa-circle manager_answer"></i>
                        <% elsif employee_answer&.answer.to_i == question.options.keys.first.to_i - i + 1 %>
                          <i class="fas fa-circle employee_answer"></i>
                        <% end %>
                      </div>
                    </label>
                  <% end %>
                <% end %>
              </fieldset>
              <% if question.allow_comments %>
                <%= f.input :comments, as: :text, input_html: {value: current_answer.comments}, required: false %>
              <% end %>
              <%= f.hidden_field :interview_id, value: @interview.id %>
              <%= f.hidden_field :interview_question_id, value: question.id %>
              <%= f.submit '', class: 'hidden-submit hidden' %>
            <% end %>
          </div>
          <% k += 1 %>
        <% end %>
      <% end %>
      <div class="interview-question__controls">
        <%= link_to '', campaign_path(@interview.campaign, employee_id: @interview.employee_id), class: 'hidden-link hidden' %>
        <button class="btn-blue btn-blue" onclick='submitAnswers(this, "Crossed")'><p>Submit Form</p></button>
      </div>
    </div>
  <% else %>
    <div class="interview-container">
      <div class="interview-start">
        <div class='empty-div'></div>
        <div class="interview-title">
          <h1><%= @interview.interview_form.title %></h1>
          <p><%= @interview.interview_form.description %></p>
        </div>
        <button class="btn-blue btn-blue-start btn-blue-start--mobile" onclick='nextQuestion(this);'><p'>Start !</p></button>
      </div>
      <% j = 1 %>
      <% @questions.where.not(question_type: 'separator').each do |question| %>
        <div class="interview-question hidden" id='question-<%= j %>'>
          <div class="interview-separator">
            <% previous_separators = @questions.where(question_type: 'separator').where('position <= ?', question.position) %>
            <h2><%= previous_separators.last.question if previous_separators.present? %></h2>
          </div>
          <%= render 'interview_questions/show_interview_question_form', questions: @questions, question: question, j: j, read_only: (@interview.employee? && @interview.employee != current_user) %>
        </div>
        <% j += 1 %>
      <% end %>
      <%= link_to '', interview_path(@interview, show_review: 'true'), remote: true, class: 'hidden-link hidden' %>
      <div class="interview-review hidden">
      </div>
    </div>
  <% end %>
 <% if @interview.label != 'Crossed' %>
  <div class="interview-progress-bar-container">
    <div class="interview-progress-bar"></div>
    <div class='interview-progress-bar__white'><p>0%</p></div>
    <div class='interview-progress-bar__blue'><p>0%</p></div>
  </div>
<% end %>


<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  document.querySelector('body').classList.add('interview-form-body')

  function selectRating(element) {
    fieldset = element.closest('fieldset')
    fieldset.querySelectorAll('.radio-rating').forEach((radio_button) => {
      if (parseInt(radio_button.id.split('-')[2],10) <= element.id.split('-')[2]) {
        radio_button.classList.add('on')
      } else {
        radio_button.classList.remove('on')
      }
    })
  }

  function enableNext(element) {
    button = element.closest('.interview-question').querySelectorAll('.btn-blue')[1]
    if (element.value.length > 0 && button != undefined) {
      button.classList.remove('btn-blue-disabled')
      button.disabled = false
    } else if (element.value.length == 0 && button != undefined) {
      button.classList.add('btn-blue-disabled')
      button.disabled = true
    }
  }

  function nextQuestion(element) {
    if (element.classList.contains('btn-blue-start')) {
      question = document.querySelectorAll('.interview-question')[0]
      start = document.querySelector('.interview-start')
      question.classList.remove('hidden')
      start.classList.add('hidden')
    } else {
      position = parseInt(element.closest('.interview-question').id.split('-')[1],10)
      question = document.querySelectorAll('.interview-question')[position]
      previous_question = document.querySelectorAll('.interview-question')[position - 1]
      previous_question.querySelector('.hidden-submit').click()
      previous_question.classList.add('hidden')
      question.classList.remove('hidden')
    }
    updateProgressionBar()
  }

  function previousQuestion(element) {
    position = parseInt(element.closest('.interview-question').id.split('-')[1],10)
    question = document.querySelectorAll('.interview-question')[position - 1]
    if (position - 1 == 0) {
      start = document.querySelector('.interview-start')
      start.classList.remove('hidden')
      question.classList.add('hidden')
    } else {
      previous_question = document.querySelectorAll('.interview-question')[position - 2]
      previous_question.classList.remove('hidden')
      question.classList.add('hidden')
    }
    updateProgressionBar()
  }

  function goToQuestion(element, option = '') {
    summary = document.querySelector('.interview-review')
    progression_bar = document.querySelector('.interview-progress-bar-container')
    if (option == 'summary') {
      current_question = element.closest('.interview-question')
      current_question.querySelector('.hidden-submit').click()
      document.querySelector('body').classList.add('wait')
      setTimeout(function(){document.querySelector('.hidden-link').click()}, 500)
      progression_bar.classList.add('hidden')
    } else {
      target_position = parseInt(element.id.split('-')[1],10)
      question = document.querySelector('#question-' + target_position)
      progression_bar.classList.remove('hidden')
      summary.classList.add('hidden')
      question.classList.remove('hidden')
    }
    updateProgressionBar()
  }

  const csrfToken = () => document.querySelector("[name='csrf-token']").content

  const getInterviewFormInputValue = (form, name) =>
    form.querySelector(`[name="interview_answer[${name}]"]`)?.value

  const answerFormPayload = (form) => JSON.stringify({
    interview_answer: {
      answer: getInterviewFormInputValue(form, 'answer'),
      comments: getInterviewFormInputValue(form, 'comments'),
      interview_id: getInterviewFormInputValue(form, 'interview_id'),
      interview_question_id: getInterviewFormInputValue(form, 'interview_question_id'),
    }
  })

  const submitAnswers = async (element, option = '') => {
    if (option == 'Crossed') {
      const forms =
        [...element.closest('.interview-summary').querySelectorAll('.hidden-submit')]
        .map((b) => b.form)

      await Promise.all(
        forms.map(async form => {
          const resp = await fetch(form.action, {
            method: "POST",
            headers: {
              "X-CSRF-Token": csrfToken(),
              "Content-Type": "application/json"
            },
            body: answerFormPayload(form)
          })
          return resp.text();
        })
      )
    } else {
      position = parseInt(element.closest('.interview-question').id.split('-')[1],10)
      last_question = document.querySelectorAll('.interview-question')[position - 1]
      const form = last_question.querySelector('.hidden-submit').form
      await fetch(form.action, {
        method: "POST",
        headers: {
          "X-CSRF-Token": csrfToken(),
          "Content-Type": "application/json"
        },
        body: answerFormPayload(form)
      })
    }
    document.querySelector('.hidden-link').click()
  }

  function updateProgressionBar() {
    container = document.querySelector('.interview-progress-bar-container')
    center_blue = document.querySelector('.interview-progress-bar__blue')
    center_white = document.querySelector('.interview-progress-bar__white')
    if (document.querySelector('.interview-question:not(.hidden)') != null) {
      result = Math.floor((parseInt(document.querySelector('.interview-question:not(.hidden)').id.split('-')[1],10) / document.querySelectorAll('.interview-question').length * 100)).toString() + '%'
      center_white.querySelector('p').innerText = result
      center_blue.querySelector('p').innerText = result
    } else {
      center_white.querySelector('p').innerText = '0%'
      center_blue.querySelector('p').innerText = '0%'
    }
    progression = document.querySelector('.interview-progress-bar__white').querySelector('p').innerText
    filling_bar = document.querySelector('.interview-progress-bar')
    filling_bar.style.width = progression
    if (filling_bar.offsetWidth == 0) {
      center_white.style.width = '0px'
      center_blue.style.width = '100px'
    } else if (filling_bar.offsetWidth > (container.offsetWidth / 2) - 25) {
      center_white.style.width = parseInt(progression.split('%'),10).toString() + 'px'
      center_blue.style.width = (100 - parseInt(progression.split('%')[0],10)).toString() + 'px'
    }
  }
</script>
