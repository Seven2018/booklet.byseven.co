<% employee = @interview.employee %>
<% manager = @interview.campaign.owner %>

<% visibility =
    if @interview.crossed?
      ['all', 'manager', 'employee']
    elsif current_user.manager_or_above?
      ['all', 'manager']
    else
      ['all', 'employee']
    end %>

<% interview_form = @interview.interview_form %>
<% fully_answered = @interview.fully_answered? %>

<% icon = { 'open_question' => 'bi:question-circle-fill',
            'mcq' => 'ant-design:check-square-filled',
            'objective' => 'fluent:target-arrow-24-filled',
            'rating' => 'codicon:star-full' } %>

<div class="interview-container">

  <div class="interview-controls">
    <% if request.referrer.present? && (request.referrer.split('/') - [request.referrer.split('/')[-1]]).join('/') == request.base_url + '/campaigns' %>
      <button class='btn-back' onclick='history.back()'>
        <i class="fas fa-angle-left"></i>
      </button>
    <% else %>
      <%= link_to campaigns_path(@interview.campaign), class: 'btn-back' do %>
        <i class="fas fa-angle-left"></i>
      <% end %>
    <% end %>
    <div class="interview-controls__buttons">
      <%= link_to interview_path(@interview, format: :pdf), class: 'btn-blue-text', id: 'interview-export-pdf', target: :_blank do %>
        <span class="iconify" data-icon="bx:bx-download"></span>
        <p>Download PDF</p>
      <% end %>
      <% unless @interview.locked? || (@interview.crossed? && current_user != manager) %>
        <button class="btn-blue-text" onclick="saveButton();">
          <span class="iconify" data-icon="fluent:save-16-regular"></span>
          <p>Save</p>
        </button>
      <% end %>
      <% if !@interview.completed? || (@interview.crossed? && !@interview.locked? && current_user == manager) %>
        <button class="btn-blue btn-blue <%= 'btn-blue-disabled' unless fully_answered %>" id='submit-interview' onclick='thankYou();' <%= 'disabled' unless fully_answered %>>
          <p><%= @interview.crossed? ? 'Save & Lock' : 'Submit' %></p>
          <span class="iconify" data-icon="fluent:send-16-filled" style="color: white;"></span>
        </button>
        <%= link_to '', (@interview.crossed? ? lock_interview_path(interview_id: @interview.id) : complete_interview_path(interview_id: @interview.id)), class: 'submit-interview hidden', remote: true %>
      <% end %>
    </div>
  </div>

  <div class="interview-main">

    <div class="interview-main__left">
      <h2>Chapters</h2>
      <div class="interview-main__left-anchors">
        <% chapter = 1 %>
        <% interview_form.interview_questions.order(position: :asc).where(visible_for: visibility).each do |question| %>

          <% question_text = question.question %>

          <div class="interview-main__left-question">
            <a href="#anchor-<%= question.position %>">
              <% if question.separator? %>
                <p class="interview-main__left-separator" title="<%= question_text %>"><%= chapter %>. <%= question_text %></p>
                <% chapter += 1 %>
              <% else %>
                <div class="interview-main__left-icon">
                  <span class="iconify" data-icon="<%= icon[question.question_type] %>"></span>
                </div>
                <p title="<%= question_text %>"><%= question.question %></p>
              <% end %>
            </a>
          </div>

        <% end %>
      </div>
    </div>

    <div class="interview-main__right">
      <h1><%= @interview.title %></h1>

      <% question_hash = {} %>
      <% j = 0 %>

      <% interview_form.interview_questions.order(position: :asc).where(visible_for: visibility).each do |question| %>
        <% if question.separator? %>
          <% j += 1 %>
        <% end -%>
        <% question_hash[j] = question_hash[j].present? ? question_hash[j] + [question] : [question] %>
      <% end %>

      <% question_number = 0 %>

      <% question_hash.each do |key, value| %>
        <% if key.to_i > 0 %>
          <div class="interview-main__right-separator">
            <p><%= key %>. <%= value.first.question %></p>
          </div>
        <% end %>
        <div class="interview-main__right-questions">
          <% value[1..-1].each do |question| %>

            <% question_number += 1 %>

            <div class="interview-main__right-question">
              <a id="anchor-<%= question.position %>" style='position:absolute; top: -2.5rem;'></a>
              <div title='<%= "Required" if question.required? %>' class='interview-main__right-question-title'>
                <p><%= question_number %>. </p>
                <span class="iconify" data-icon="<%= icon[question.question_type] %>"></span>
                <p><%= question.question %> <%= "*" if question.required? %></p>
              </div>
              <div class="interview-main__right-question-description">
                <%= sanitize question.description %>
              </div>
              <%= render 'interview_questions/show_interview_question_form', questions: @questions, question: question, manager: manager, employee: employee, j: question_number, read_only: ((@interview.label == 'Employee' && employee != current_user) || (@interview.label == 'Manager' && manager != current_user) || (@interview.label == 'Simple' && manager != current_user)) %>
            </div>
          <% end %>
        </div>
      <% end %>

    </div>

  </div>

</div>

<div class="interview-thanks hidden">
  <div class="flex-column-start-centered">
    <p>Review <%= @interview.crossed? ? 'Locked' : 'Submitted' %> ! <i class="fas fa-check-square"></i></p>
    <p>Thank you for completing this review ! <i class="far fa-thumbs-up"></i></p>
    <p>You can go back to the interview, or exit to the dashboard.</p>
  </div>
  <div class="interview-thanks__controls">
    <button class="btn-blue-text" onclick='thankYou("back");'><p><i class="fas fa-long-arrow-alt-left"></i> Back</p></button>
    <%= link_to campaign_path(@interview.campaign, employee_id: employee.id) do %>
      <button class="btn-blue"><p>Exit</p></button>
    <% end %>
  </div>
</div>


<div class="saved-message hidden">
  <p>SAVED!</p>
</div>

<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  auto_save = true
  doubleClickGuardian = false

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0;i < len;i++)  {
        if (event.target == notelem[i] || notelem[i].contains(event.target)) {
            clickedOut = false;
        }
    }
    if (clickedOut) return true;
    else return false;
  }

  function autoSave(element, delayed = false) {
    if (delayed && auto_save) {
      auto_save = false
      setTimeout(function(){
        auto_save = true
        element.closest('form').querySelector('.hidden-submit').click()
      }, 1000)
    } else {
      element.closest('form').querySelector('.hidden-submit').click()
    }
  }

  function enableSubmit() {
    required_answers = document.querySelectorAll('#interview_answer_answer:required, #interview_answer_objective:required')
    submit_button = document.querySelector('#submit-interview')
    required_answers.forEach((input) => {
      if (input.value == '') {
        submit_button.classList.add('btn-blue-disabled')
        submit_button.disabled = true
        return
      }
    })
  }

  function saveButton() {
    document.querySelector('body').classList.add('wait')
    if (<%= @interview.crossed? %>) {
      document.querySelectorAll('form.interview_answer').forEach((form) => {
        setTimeout(function(){form.querySelector('.hidden-submit').click();}, 1000);

      })
    }
    setTimeout(function(){
      document.querySelector('body').classList.remove('wait')
      document.querySelector('.saved-message').classList.remove('hidden')
      setTimeout(function(){
        document.querySelector('.saved-message').classList.add('hidden')
      }, 1500)
     }, 1500)
  }

  function thankYou(option = 'forward') {
    main_container = document.querySelector('.interview-container')
    thank = document.querySelector('.interview-thanks')
    submit_button = document.querySelector('#submit-interview')
    if (submit_button != null) {submit_button.remove()}
    if (option == 'forward') {
      document.querySelector('.submit-interview').click()
      main_container.classList.add('hidden')
      thank.classList.remove('hidden')
    } else if (option == 'back') {
      thank.classList.add('hidden')
      main_container.classList.remove('hidden')
    }
  }

  // AUTO UPDATE TEXTAREA HEIGHT //

  const tx = document.getElementsByTagName("textarea");
  for (let i = 0; i < tx.length; i++) {
    tx[i].setAttribute("style", "height:auto;overflow-y:hidden;");
    tx[i].addEventListener("click", OnInput, false);
    tx[i].addEventListener("input", OnInput, false);
    tx[i].click()
  }

  function OnInput() {
    this.style.height = "auto";
    this.style.height = (this.scrollHeight) + "px";
  }


  ////////////////////
  // BOOKLET SELECT //
  ////////////////////

  function BookletSelectExpand(element) {
    doubleClickGuardian = true
    dropdown = element.closest('.booklet-select__container').querySelector('.booklet-select__dropdown')
    setTimeout(() => {
      doubleClickGuardian = false
    }, 100);
    if (dropdown.classList.contains('hidden')) {
      dropdown.classList.remove('hidden')
      window.addEventListener('click', function(e) {
        if (outsideClick(e, element) && !doubleClickGuardian) {
          dropdown.classList.add('hidden')
          this.removeEventListener('click', arguments.callee, false);
        }
      });
    } else {
      dropdown.classList.add('hidden')
    }
  }

  function BookletSelectSubmit(element) {
    form = element.closest('form')
    selected_display = element.closest('.booklet-select__container').querySelector('.booklet-select__selected')
    selected_value = element.querySelector('p').innerText
    storage = form.querySelector('#interview_answer_answer')
    submit_button = form.querySelector('.hidden-submit')

    storage.value = selected_value
    selected_display.querySelector('p').innerText = selected_value
    submit_button.click()
  }

  function BookletSelectRemoveAnswer(element) {
    form = element.closest('form')
    selected_display = element.closest('.booklet-select__selected')
    storage = form.querySelector('#interview_answer_answer')
    submit_button = form.querySelector('.hidden-submit')

    selected_display.querySelector('p').innerText = ''
    element.classList.add('hidden')
    storage.value = ''
    submit_button.click()
  }

</script>
