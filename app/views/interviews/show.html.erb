<% employee = @interview.employee %>
<% manager = @interview.interviewer %>

<% template = @interview.interview_form %>

<% visibility =
     if @interview.crossed?
       ['all', 'manager', 'employee']
     elsif @interview.manager?
       ['all', 'manager']
     else
       ['all', 'employee']
     end %>

<% fully_answered = @interview.fully_answered? %>

<div class="interview-container">

  <div class="d-none d-sm-flex justify-content-between interview-controls p-2rem bkt-bg-white bkt-box-shadow-light pos-fix z-index-150" style='top: 7.5rem; left: 0; right: 0; height: 9rem;'>
    <% if @interview.locked? %>
      <button
        class="d-inline-flex align-items-center fs-2rem bkt-blue bkt-box-shadow-medium p-3 rounded-5px font-weight-500"
        onclick="window.history.back()"
      >
        <span class="iconify mr-3" data-icon="bi:arrow-left"></span>
        <p class="">Close</p>
      </button>
    <% else %>
      <button
        data-toggle='modal'
        data-target='#confirmGoBack'
        class="d-inline-flex align-items-center fs-2rem bkt-blue bkt-box-shadow-medium p-3 rounded-5px font-weight-500"
      >
        <span class="iconify mr-3" data-icon="bi:arrow-left"></span>
        <p class="">Close and submit later</p>
      </button>
    <% end %>

    <div class="flex-column">
      <div class="interview-controls__buttons">
        <%= link_to interview_path(@interview, format: :pdf), class: 'd-flex bkt-blue rounded-5px p-2', id: 'interview-export-pdf', target: :_blank do %>
          <span class="iconify" data-icon="bx:bx-download"></span>
          <p>Download PDF</p>
        <% end %>

        <% if InterviewPolicy.new(current_user, @interview).answer_question? %>
          <p class="p-2 bkt-green mx-5" id="xhr-form-status-btn">Up to date</p>

          <a href='<%= complete_interview_path(interview_id: @interview.id) if fully_answered %>'
             data-url='<%= complete_interview_path(interview_id: @interview.id) %>'
             data-remote='true'
             id='submit-interview-link'
             class='ml-2rem d-none'>
          </a>

          <%= link_to '', lock_interview_path(interview_id: @interview.id), remote: true, id: 'lock-interview-link', class: 'd-none' %>

          <button
            data-toggle='modal'
            data-target='#interviewConfirmSubmit'
            class="btn-blue btn-blue  <%= 'btn-blue-disabled' unless fully_answered %>" <%= 'disabled' unless fully_answered %>
          >
            <p>Submit test</p>
            <span class="iconify ml-2" data-icon="fluent:send-16-filled" style="color: white;"></span>
          </button>

        <% end %>
      </div>
    </div>
  </div>

  <div class="interview-main">

    <div class='interview-main__left bkt-bg-white py-3rem px-5rem border-right-bkt-light-grey pos-fix z-index-100' style='top: 16.5rem; left: 0;'>
      <%= render 'interview_forms/edit/edit_show_summary', template: template %>
    </div>

    <div class="interview-main__right">

      <div class="flex-row-start-centered width-100">
        <%= link_to :back, class: 'flex-row-center-centered d-sm-none height-5rem width-5rem' do %>
          <i class="fas fa-angle-left fs-2_4rem"></i>
        <% end %>
      </div>


      <h1 class="fs-2_4rem font-weight-700 mb-2rem"><%= @interview.campaign.title %></h1>

      <div class="trix-display">
        <%= sanitize template.description %>
      </div>

      <% video = template.video %>

      <% if video.present? %>
        <iframe class='mb-5rem' src="<%= VideoHelper.embed_video(@interview.interview_form.video) %>" style='width: 75%; aspect-ratio: 16 / 9;'></iframe>
      <% end %>

      <% question_num = 0 %>

      <%
        QuestionDecorator.decorate_collection(
          @interview.interview_form.interview_questions
                    .order(position: :asc)
                    .where(visible_for: visibility)
        ).each do |question|
      %>
        <% if question.separator? %>
          <div class="interview-main__right-separator">
            <p class='pb-1rem'><%= question.question %></p>
          </div>
          <div class="trix-display">
            <%= sanitize question.description %>
          </div>
        <% end %>

        <% next if question.separator? %>

        <% question_num += 1 %>

        <div class="interview-main__right-questions">
          <div class="interview-main__right-question">
            <a id="anchor-<%= question.id %>" style='position:absolute; top: -21.5rem;'></a>
            <div title='<%= "Required" if question.required? %>' class='interview-main__right-question-title'>
              <p><%= question_num %>. </p>
              <span class="iconify" data-icon="<%= question.icon %>"></span>
              <p><%= question.question %> <%= "*" if question.required_for?(@interview.label == 'Employee' ? 'employee' : 'manager') %></p>
            </div>
            <div class="interview-main__right-question-description">
              <%= sanitize question.description %>
            </div>

            <%= render 'interview_questions/show_interview_question_form',
                       interview: @interview,
                       question: question,
                       manager: manager,
                       employee: employee,
                       read_only: (
                         (@interview.employee? && employee != current_user) ||
                           (@interview.manager? && manager != current_user) ||
                           (@interview.simple? && manager != current_user) ||
                           @interview.locked?
                       ),
                       company: current_user.company
            %>
          </div>
        </div>
      <% end %>

    </div>

  </div>

  <div class="interview-controls--mobile">
    <div class="interview-controls__buttons--mobile">
      <%= link_to interview_path(@interview, format: :pdf), class: 'btn-blue-text', id: 'interview-export-pdf', target: :_blank do %>
        <span class="iconify" data-icon="bx:bx-download"></span>
      <% end %>
      <% if InterviewPolicy.new(current_user, @interview).answer_question? %>
        <button class="btn-blue-text" id="save-interview" onclick="saveButton();">
          <span class="iconify" data-icon="fluent:save-16-regular"></span>
          <p>Save</p>
        </button>
        <a data-toggle='modal width-fit-content' data-target='#lockInterview'>
          <button class="btn-blue btn-blue <%= 'btn-blue-disabled' unless fully_answered %>" id='submit-interview' <%= 'disabled' unless fully_answered %>>
            <p>Submit</p>
            <span class="iconify" data-icon="fluent:send-16-filled" style="color: white;"></span>
          </button>
        </a>
      <% end %>
    </div>
  </div>

</div>

<div class="interview-thanks hidden">
  <div class="flex-column-start-centered">
    <p>Review Submitted ! <i class="fas fa-check-square"></i></p>
    <p>Thank you for completing this review ! <i class="far fa-thumbs-up"></i></p>
    <p>You can go back to the interview, or exit to the dashboard.</p>
  </div>
  <div class="interview-thanks__controls">
    <button class="btn-blue-text" onclick='thankYou("back");'><p><i class="fas fa-long-arrow-alt-left"></i> Back</p>
    </button>
    <%= link_to :back do %>
      <button class="btn-blue"><p>Exit</p></button>
    <% end %>
  </div>
</div>


<div class="saved-message hidden">
  <p>SAVED!</p>
</div>


<!------------>
<!-- MODALS -->
<!------------>

<div class='modal fade' id='lockInterview' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-lg rounded-20px' role='document'>
    <%= render 'interviews/modals/lock_interview' %>
  </div>
</div>

<div class='modal fade' id='confirmLocked' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog rounded-20px' role='document'>
    <%= render 'interviews/modals/confirm_locked' %>
  </div>
</div>

<div class='modal fade' id='interviewConfirmSubmit' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-content bkt-bg-white rounded-5px py-5' role='document'>
    <div class=" flex-row-end-centered">
      <button class="mr-5 fs-2rem" data-dismiss="modal" aria-label="Close">X</button>
    </div>
    <div class="flex-row-center-centered">
      <span class="iconify" data-icon="noto:closed-mailbox-with-raised-flag" data-height="85" data-width="85"></span>
    </div>
    <p class="text-center fs-2rem font-weight-700 mt-5">You are about to submit you answers <br> and lock them ðŸ”’</p>
    <p class="text-center fs-1_6rem font-weight-600 mt-5">The state of your interview will be updated to :</p>
    <p class="text-center fs-1_6rem font-weight-600 mt-1 bkt-green mb-5">Interview submitted</p>
    <div class="flex-row-between-centered width-60 m-auto">
      <button class="border-bkt-blue-2px bkt-blue p-4 rounded-5px fs-1_6rem" data-dismiss="modal" aria-label="Close">Maybe
        Later
      </button>
      <button
        class="bkt-bg-blue bkt-white p-4 rounded-5px fs-1_6rem d-flex align-items-center"
        onclick="submitAndLock()"
      >
        Submit <span class="iconify ml-3" data-icon="bxs:lock"></span>
      </button>
    </div>
  </div>
</div>

<div class='modal fade' id='confirmGoBack' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' data-backdrop="static" data-keyboard="false">
  <div class='modal-dialog modal-content bkt-bg-white rounded-5px py-5' role='document'>
    <div class=" flex-row-end-centered">
      <button class="mr-5 fs-2rem" data-dismiss="modal" aria-label="Close">X</button>
    </div>
    <div class="flex-row-center-centered">
      <span class="iconify ml-3" data-icon="noto:thumbs-up" data-height="70" data-width="70"></span>
    </div>
    <p class="text-center fs-1_6rem font-weight-700 mt-5">Your answers are saved, you can come back later <br>to finish
      your interview and submit it.</p>
    <p class="text-center fs-1_6rem  my-5">Your interview state will stay as â€˜In Progressâ€™.</p>
    <%= link_to 'Go to â€˜My Interviewsâ€™', my_interviews_path, class: 'm-auto mt-5 p-3 bkt-white bkt-bg-blue rounded-5px' %>
  </div>
</div>

<!---------------->
<!-- JAVASCRIPT -->
<!---------------->

<script>
  auto_save = true
  doubleClickGuardian = false

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0; i < len; i++) {
      if (event.target == notelem[i] || notelem[i].contains(event.target)) {
        clickedOut = false;
      }
    }
    if (clickedOut) return true;
    else return false;
  }

  function autoSave(element, delayed = false) {
    if (delayed && auto_save) {
      auto_save = false
      setTimeout(function () {
        auto_save = true
        const status = document.getElementById('xhr-form-status-btn')
        status.classList.remove('bkt-green')
        status.classList.add('bkt-yellow')
        status.innerText = 'Updating...'
        element.closest('form').querySelector('.hidden-submit').click()
      }, 1000)
    } else {
      const status = document.getElementById('xhr-form-status-btn')
      status.classList.remove('bkt-green')
      status.classList.add('bkt-yellow')
      status.innerText = 'Updating...'
      element.closest('form').querySelector('.hidden-submit').click()
    }
  }

  function enableSubmit() {
    required_answers = document.querySelectorAll('#interview_answer_answer:required, #interview_answer_objective:required')
    submit_buttons = document.querySelectorAll('#submit-interview')
    link = document.getElementById('submit-interview-link')

    required_answers.forEach((input) => {
      if (input.value == '') {
        submit_buttons.forEach((button) => {
          button.classList.add('btn-blue-disabled')
          button.disabled = true
          link.href = ''
        })
        return
      }
    })
  }

  function saveButton(message = true) {
    document.querySelector('body').classList.add('wait')
    if (<%= @interview.crossed? && !@interview.submitted? %>) {
      document.querySelectorAll('form.interview_answer').forEach((form) => {
        setTimeout(function () {
          form.querySelector('.hidden-submit').click();
        }, 1000);

      })
    }
    if (message) {
      setTimeout(function () {
        document.querySelector('body').classList.remove('wait')
        document.querySelector('.saved-message').classList.remove('hidden')
        setTimeout(function () {
          document.querySelector('.saved-message').classList.add('hidden')
        }, 1500)
      }, 1500)
    } else {
      document.querySelector('body').classList.remove('wait')
    }
  }

  function submitAndLock() {
    const submit = document.getElementById('submit-interview-link')
    const lock = document.getElementById('lock-interview-link')

    submit.click()
    lock.click()
    setTimeout(() => {
      location.reload();
    }, 500)
  }

  // AUTO UPDATE TEXTAREA HEIGHT //

  const tx = document.getElementsByTagName("textarea");
  for (let i = 0; i < tx.length; i++) {
    tx[i].setAttribute("style", "height:auto;overflow-y:hidden;");
    tx[i].addEventListener("click", OnInput, false);
    tx[i].addEventListener("input", OnInput, false);
    tx[i].click()
  }

  function OnInput() {
    this.style.height = "auto";
    this.style.height = (this.scrollHeight) + "px";
  }


  ////////////////////
  // BOOKLET SELECT //
  ////////////////////

  function BookletSelectExpand(element) {
    doubleClickGuardian = true
    dropdown = element.closest('.booklet-select__container').querySelector('.booklet-select__dropdown')
    setTimeout(() => {
      doubleClickGuardian = false
    }, 100);
    if (dropdown.classList.contains('hidden')) {
      dropdown.classList.remove('hidden')
      window.addEventListener('click', function (e) {
        if (outsideClick(e, element) && !doubleClickGuardian) {
          dropdown.classList.add('hidden')
          this.removeEventListener('click', arguments.callee, false);
        }
      });
    } else {
      dropdown.classList.add('hidden')
    }
  }

  function BookletSelectSubmit(element) {
    form = element.closest('form')
    selected_display = element.closest('.booklet-select__container').querySelector('.booklet-select__selected')
    selected_value = element.querySelector('p').innerText
    storage = form.querySelector('#interview_answer_answer')
    submit_button = form.querySelector('.hidden-submit')

    storage.value = selected_value
    selected_display.querySelector('p').innerText = selected_value
    submit_button.click()
  }

  function BookletSelectRemoveAnswer(element) {
    form = element.closest('form')
    selected_display = element.closest('.booklet-select__selected')
    storage = form.querySelector('#interview_answer_answer')
    submit_button = form.querySelector('.hidden-submit')

    selected_display.querySelector('p').innerText = ''
    element.classList.add('hidden')
    storage.value = ''
    submit_button.click()
  }


  /////////////
  // ON LOAD //
  /////////////

  saveButton(false)
</script>
